<!DOCTYPE HTML PUBLIC "-//IBM//DTD HPB HTML//EN">
<HTML>
<HEAD>
<link rel=stylesheet type="text/css" href="../../../mobile/allman.css">
<!--
Editors Notes:
  PWC- updated formatting
-->
<TITLE></TITLE>
</HEAD>

<BODY>

<P><A name="16 entry"><B>16 entry</B></A><BR></P>

<P><A name="2 tile system"><B>2 tile system</B></A
<BR></P>

<P><A name="64-bit border"><B>64-bit border</B></A
<BR></P>

<P><A name="ADD rendering mode"><B>ADD rendering mode
</B></A><BR></P>

<P><A name="aliasing"><B>aliasing</B></A><BR>
When you display lines or polygons using display equipment that has
pixels (like TV), steps (notches) appear on diagonal and curved lines and
polygon borders. Aliasing refers to these steps.</P>

<P><A name="align"><B>align</B></A><BR></P>

<P><A name="alpha"><B>alpha</B></A><BR>
--> <A href="#alpha value">alpha value</A></P>

<P><A name="alpha blending"><B>alpha blending
</B></A><BR></P>

<P><A name="alpha channel"><B>alpha channel
</B></A><BR></P>

<P><A name="alpha comparison"><B>alpha comparison</B></A><BR>A function that compares a pixel's alpha value with the set threshold value alpha and performs a conditional write.  Used for drawing semi-transparent polygons and composing pixels.</P>

<P><A name="alpha dither comparison"><B>alpha dither comparison</B></A><BR>When the pixel alpha value is larger than a random dither value, the frame buffer is provisionally rewritten.  This provides a way to attach alpha gradations to a surface and realize particle effects.</P>

<P><A name="alpha value"><B>alpha value</B></A><BR>The fourth color element.  It describes the opacity.  The larger the alpha value, the more opaque the image.  The value is not directly expressed, but used when mixing colors.</P>

<P><A name="ambient light"><B>ambient light
</B></A><BR>Diffuse, non-directional light in the environment.  It determines the color of parts of the object that are not hit by light.</P>

<P><A name="analogical algorithm"><B>analogical algorithm</B></A><BR></P>

<P><A name="animate"><B>animate</B></A><BR>
To create a moving image.</P>

<P><A name="anti-aliasing"><B>anti-aliasing
</B></A><BR>A rendering technique used to smooth lines and image edges by reducing the jagged edges (notches) sometimes seen in bitmap images.</P>

<P><A name="aperture angle"><B>aperture angle</B></A><BR>The angle that defines the scope of the field of view.  The same as the opening in a camera lens.</P>

<P><A name="area sampling"><B>area sampling
</B></A><BR></P>

<P><A name="attribute"><B>attribute</B></A><BR>
Attributes</P>

<P><A name="attribute calculation"><B>attribute calculation</B></A><BR></P>

<P><A name="attribute command"><B>attribute command
</B></A><BR></P>

<P><A name="attribute interpolation"><B>attribute interpolation</B></A><BR></P>

<P><A name="attribute interpolation pipe"><B>attribute interpolation pipe</B></A><BR></P>

<P><A name="attribute update"><B>attribute update
</B></A><BR></P>

<P><A name="A value"><B>A value</B></A><BR>
--> <A href="#alpha value">alpha value</A></P>

<P><A name="average filtering mode"><B>average filtering mode</B></A><BR></P>

<P><A name="average texture"><B>average texture</B></A><BR></P>

<P><A name="bank control file buffer"><B>bank control file buffer</B></A><BR></P>

<P><A name="bank object"><B>bank object</B></A><BR></P>

<P><A name="base texture"><B>base texture</B></A>
<BR></P>

<P><A name="bilerp"><B>bilerp </B></A><BR>
Bilinear filtering mode.</P>

<P><A name="bilinear filtering"><B>bilinear filtering
</B></A><BR>The process of bilinearly interpolating the color variations in a texture so the dots do not look coarse when the texture is enlarged.</P>

<P><A name="bilinear interpolation"><B>bilinear interpolation</B></A><BR>The two-dimensional linear interpolation provided in the vertical and horizontal directions.</P>

<P><A name="blend color"><B>blend color</B></A><BR></P>

<P><A name="blend color compare"><B>blend color compare
</B></A><BR>The alpha value (threshold) used in the alpha compare process.</P>

<P><A name="blender"><B>blender</B></A><BR>
The RDP component used to mix the calculated pixels and framebuffer
pixels. The blender (BL) is used in translucent polygon drawing process,
the anti-aliasing process, the fog process, the dither process, and so
on.</P>

<P><A name="blender ADD mode"><B>blender ADD mode
</B></A><BR></P>

<P><A name="blender mux control bit"><B>blender mux control bit</B></A><BR>The data used to set the blender hardware. This data defines the blend expression. It is stored in the "othermode" parameter of the RDP.</P>

<P><A name="blending"><B>blending</B></A><BR></P>

<P><A name="blend mux"><B>blend mux</B></A><BR></P>
<P><A name="blend slider"><B>blend slider</B></A><BR></P>

<P><A name="blend texture"><B>blend texture</B></A><BR>Using the alpha value of a texture to determine the comparative mixture of the shading RGB value and the texture's RGB value.</P>

<P><A name="bounding volume test"><B>bounding volume test
</B></A><BR>
--> The test used for <A HREF="#volume culling">volume culling</A>.
The test checks to see if the bounding volume of an object is within the
viewing volume. If it is completely outside the viewing volume, then display
list items for that object are not executed to speed up the process.</P>

<P><A name="box filter"><B>box filter</B></A><BR>
A mode of the texture filter which balances the four texels that lie
around the sampling point. It is most effective when the sampling point
is placed in the center of four texels.</P>

<P><A name="branching"><B>branching</B></A><BR>
Branching.</P>

<P><A name="cell"><B>cell</B></A><BR></P>

<P><A name="chromakey operation color"><B>chromakey operation color</B></A><BR></P>

<P><A name="chromakey process"><B>chromakey process</B></A><BR>The process that sets a specific color (often blue) to be rendered
as transparent and then synthesizes more than two images leaving out the
parts that have the specific (blue) color.</P>

<P><A name="CI"><B>CI </B></A><BR>
--> <A href="#color index">color index</A></P>

<P><A name="clamp"><B>clamp</B></A><BR>
A technique for using the data at the edges of a texture when you specify outside the range of the texture.<BR><IMG src="../gif/clamp.gif"></P>

<P><A name="clamp call"><B>clamp call</B></A><BR>
</P>

<P><A name="clamp parameter"><B>clamp parameter
</B></A><BR></P>

<P><A name="clamp value"><B>clamp value</B></A><BR></P>

<P><A name="clipping"><B>clipping</B></A><BR>
The process that cuts off polygons or lines outside of the view in order to reduce the amount of data being processed during rendering. Although clipping takes a relatively long time to process, you can reduce the process time by changing the ratio between the clipping pyramid and screen, and then using clipping along with the faster process of scissoring.</P>

<P><A name="clipping code"><B>clipping code
</B></A><BR></P>

<P><A name="clipping plane of camera"><B>clipping plane of camera</B></A><BR></P>

<P><A name="clipping pyramid"><B>clipping pyramid
</B></A><BR>The three-dimensional area outside of which clipping occurs. In other words, objects sticking out of this area are clipped.</P>

<P><A name="clipping pyramid box"><B>clipping pyramid box
</B></A><BR>Clipping pyramid.</P>

<P><A name="clipping range"><B>clipping range</B></A><BR></P>

<P><A name="ClipRatio function"><B>ClipRatio function</B>
</A><BR></P>

<P><A name="clock cycle"><B>clock cycle</B></A><BR></P>

<P><A name="Cloud(CLD) rendering mode"><B>Cloud(CLD) rendering mode</B></A><BR></P>

<P><A name="cloud primitive"><B>cloud primitive
</B></A><BR></P>

<P><A name="cloud surface mode"><B>cloud surface mode
</B></A><BR></P>

<P><A name="color blend"><B>color blend</B></A>
<BR></P>

<P><A name="color buffer"><B>color buffer</B></A><BR>A color frame buffer that holds data for rendering.</P>

<P><A name="color combiner mode"><B>color combiner mode
</B></A><BR>The means for blending color sources.</P>

<P><A name="color component"><B>color component
</B></A><BR></P>

<P><A name="color dither"><B>color dither</B></A><BR> --> <A href="#dither">dither</A></P>

<P><A name="color image format"><B>color image format
</B></A><BR></P>

<P><A name="color index"><B>color index
</B></A><BR>The mode in which palette information is held for every texel.  Can be in 4-bit or 8-bit format.</P>

<P><A name="color index (CI) texture"><B>color index (CI) texture</B></A><BR>A texture with palette information. The size is 4-bit or 8-bit, and the color is fetched from the <A href="#TLUT">TLUT</A> created in the latter 2 Kbytes of TMEM.</P>

<P><A name="color index palette"><B>color index palette
</B></A><BR>The color index palette joins each color with its corresponding index (palette number).</P>

<P><A name="color register"><B>color register</B></A><BR></P>

<P><A name="color (RGBA) texture"><B>color (RGBA) texture
</B></A><BR>A texture with 16-bit (RGBA/5551) or 32-bit (RGBA/8888) color information and alpha information.</P>

<P><A name="color scheme"><B>color scheme</B></A><BR>The color composition.</P>

<P><A name="color shift effect"><B>color shift effect</B></A><BR></P>

<P><A name="common edge"><B>common edge</B></A><BR></P>

<P><A name="component texture"><B>component texture
</B></A><BR></P>

<P><A name="contiguous texture block"><B>contiguous texture block</B></A><BR></P>

<P><A name="copy mode"><B>copy mode</B></A><BR>
A special pipeline mode for high-speed copying of images to the frame buffer.  The RDP pipeline is all but bypassed, so filter settings are not necessary.</P>

<P><A name="coverage value"><B>coverage value</B></A><BR>The amount of the pixel which is covered by a primitive. Every pixel is comprised of 16 subpixels.  A dither mask like the checkered pattern shown below stores how many of the eight subpixels to cover.  Used for anti-aliasing.<BR>
<IMG src="../gif/cover.gif"></P>

<P><A name="coverage value unit"><B>coverage value unit</B></A><BR>A hardware unit used in the processing of data during anti-aliasing.  It is the part that calculates the <A href="#coverage value">coverage value</A>.
</P>

<P><A name="coverage value wrap"><B>coverage value wrap</B></A><BR>This situation arises when the sum of the existing coverage value in memory and the new pixel coverage value is greater than 1.0 (when the sum = 1, then the pixel is completely covered by a primitive.)  The blender uses coverage value wrap information to execute anti-aliasing.</P>

<P><A name="crack"><B>crack</B></A><BR>
crack.</P>

<P><A name="culling"><B>culling</B></A><BR>
The process whereby unnecessary objects are culled (removed) from the
display and from the graphic command pipeline (the display list).</P>

<P><A name="current state"><B>current state</B></A><BR></P>

<P><A name="cut out"><B>cut out</B></A><BR></P>

<P><A name="cut out type"><B>cut out type</B></A>
<BR></P>

<P><A name="cvgbit"><B>cvgbit </B></A><BR>
-->  <A href="#coverage value">coverage value</A></P>

<P><A name="cycle type"><B>cycle type</B></A><BR>
</P>

<P><A name="decal"><B>decal</B></A><BR></P>

<P><A name="decal line"><B>decal line</B></A><BR>The name for a line that is drawn on top of a rendered surface.  This can be used to exaggerate an object comprised of polygons and to give it a more high-tech look.</P>

<P><A name="decal render mode"><B>decal render mode</B></A><BR></P>

<P><A name="decal surface"><B>decal surface
</B></A><BR>The name for a surface attached on top of another rendered surface.  Because the decal surface is only attached under the condition of blending when the coverage value is not wrapped, it is possible with decal writing to overwrite the original surface.</P>

<P><A name="decal texture"><B>decal texture</B></A><BR>The name for a texture that is drawn on top of a rendered surface.  This can be used for example to attach a pattern on an airplane wing.</P>

<P><A name="decal Z algorithm"><B>decal Z algorithm
</B></A><BR>The algorithm for blending when the coverage value is not wrapped (when the value is 1.0) and for overwriting when it is wrapped.<BR>
<IMG src="../gif/decalz.gif"></P>

<P><A name="decay coefficient"><B>decay coefficient</B></A><BR>The illumination from a point light source will attenuate (not so for parallel light rays).  This coefficient is the factor by which the value of the light source is multiplied to determine the amount of attenuation.</P>

<P><A name="delta-Z mem"><B>delta-Z mem</B></A><BR></P>

<P><A name="delta-Z value"><B>delta-Z value</B></A><BR>The absolute value for the change in Z value in a pixel.  Determined with Z buffering and used in various ways, depending on the blender mode setting.</P>

<P><A name="depth buffer"><B>depth buffer</B></A><BR> --> <A href="#Z buffer">Z buffer</A></P>

<P><A name="depth buffer comparison"><B>depth buffer comparison</B></A><BR>When the Z buffer is used for rendering, the depth value of every pixel is compared with the depth value stored in the Z buffer.</P>

<P><A name="depth source"><B>depth source</B></A><BR></P>

<P><A name="depth value"><B>depth value</B></A><BR>The depth value is determined by interpolating the Z values for the three vertices of the triangle containing the pixel.  For rectangles and the like which do not have associated Z values, a single Z value is set for the entire primitive. The depth value is used for depth buffer comparisons.</P>

<P><A name="Detail mode"><B>Detail mode</B></A><BR></P>

<P><A name="detail texture"><B>detail texture</B></A><BR>Even if you use tri-linear MIP map interpolation, the texture becomes
blurry when it approaches the maximum level of MIP mapping. The detail
texture shows the detail texture design when MIP mapping is unsuitable.</P>

<P><A name="diffuse effect"><B>diffuse effect</B></A><BR></P>

<P><A name="diffuse light"><B>diffuse light
</B></A><BR>Light that reflects in all directions with the same strength. The strength of reflecting light depends on the angle of incidence.</P>

<P><A name="discontinuous rectangle command"><B>discontinuous rectangle command</B></A><BR></P>

<P><A name="display list"><B>display list
</B></A><BR>The series of GBI commands needed for a drawing routine that provides all the necessary GBI commands each time without rerunning the routine. This makes the program simple, and ensures that the object will always be drawn the same way as quickly as possible.</P>

<P><A name="display list format"><B>display list format
</B></A><BR></P>

<P><A name="display list stack"><B>display list stack
</B></A><BR></P>

<P><A name="dither"><B>dither</B></A><BR>
A technique used to enhance image quality by increasing the apparent number of colors beyond those that are actually used to display the image. Basically, a different but close color is specified by using neutral tints and placed here and there in the image. This feature is implemented in the N64 RCP graphics hardware as an implementation of the dither filter.</P>

<P><A name="dither filter"><B>dither filter</B></A><BR>In the 16-bit format, each color is allocated only 5 bits. So, to enhance
the color data, a dither filter is applied to give each color 8 bits by
adding correction data in a special pattern in the lowest 3 bit positions.
This softens the mach band effect.</P>

<P><A name="dither matrix"><B>dither matrix
</B></A><BR>The correction data pattern for the low 3 bits used by the dither filter.</P>

<P><A name="dither pattern"><B>dither pattern</B></A><BR></P>

<P><A name="dither value"><B>dither value</B></A><BR></P>

<P><A name="divot filter"><B>divot filter</B></A><BR>A filter used to eliminate holes in anti-aliased pixels. (These holes arise when 1 pixel overlaps a number of boundary edges.)  This filter is only enabled in anti-alias video mode.  Also, it is not applicable to areas of full coverage.
</P>

<P><A name="double buffer"><B>double buffer</B></A><BR>A pair of image buffers.  While the front image buffer is being drawn on the screen, rendering is performed in the back image buffer.  When the drawing from one buffer is completed, the roles of the front and back buffers are switched.
</P>

<P><A name="drawing loop"><B>drawing loop
</B></A><BR></P>

<P><A name="dynamic lighting calculation"><B>dynamic lighting calculation</B></A><BR></P>

<P><A name="dz value"><B>dz value</B></A><BR>
This value is used with objects that are rendered in anti-alias and decal render modes to determine whether the new pixel has the same surface as the pixel already in memory.</P>

<P><A name="edge"><B>edge</B></A><BR></P>

<P><A name="edge texel color"><B>edge texel color
</B></A><BR></P>

<P><A name="environment color"><B>environment color</B></A><BR>The color of the <A href="#ambient light">ambient light</A>.</P>

<P><A name="environment color register"><B>environment color register</B></A><BR>A general-use color register in the color combiner that is set with the gDPSetEnvColor function.  It is used to set the environment color and to set the color of the second highlight.</P>

<P><A name="environment light"><B>environment light</B></A><BR> --> <A href="#ambient light">ambient light</A></P>

<P><A name="environment mapping"><B>environment mapping</B></A><BR>Texture mapping that creates reflections of objects on a surface of an object. In other words, it creates realistic-looking reflections on a surface. You can execute easily in N64 development by using refection mapping. </P>
<P><A name="eyepoint"><B>eyepoint </B></A><BR>
--> <A href="#view point">view point</A></P>

<P><A name="far plane"><B>far plane</B></A><BR> --> <A href="#near/far plane">near/far plane</A></P>

<P><A name="fill color"><B>fill color </B></A><BR>
Used to paint in background color and the Z buffer. See <A href="#fill mode">fill mode</A></P>

<P><A name="fill mode"><B>fill mode</B></A><BR>
In this mode you can clear frame buffers at the rate of 64-bits per clock tick.  This mode is used primarily to clear the color buffer and the Z buffer.</P>

<P><A name="fill rate"><B>fill rate</B></A><BR>
The pixel drawing rate per second.</P>

<P><A name="filtering"><B>filtering</B></A><BR></P>
<P><A name="flat shading"><B>flat shading
</B></A><BR>To fill up an entire primitive with a single color.</P>

<P><A name="flip"><B>flip</B></A><BR>
To move the texture by switching the coordinates such that the s coordinate
goes to the y direction and the t coordinate goes to the x direction.</P>

<P><A name="flip book animation"><B>flip book animation
</B></A><BR>Animation that looks like a flip-book comic.</P>

<P><A name="flush"><B>flush</B></A><BR>
To completely clean out.  Here it refers to cleaning out the entire rendering pipeline.</P>

<P><A name="fog blend"><B>fog blend</B></A><BR></P>
<P><A name="fog color"><B>fog color</B></A><BR>
The color of fog can be set with the gDPSEtFogColor function.</P>

<P><A name="fog Mux"><B>fog Mux </B></A><BR></P>

<P><A name="fog process"><B>fog process</B></A><BR>The process that makes objects in the distance look misty or foggy
to simulate normal atmospheric effects. This provides realistic views of
objects in the distance. Thanks to this, even if the quality of the far-away
object falls, the whole quality of the image is not affected as much. It
also can be used to soften the pop-in or pop-out effect.</P>

<P><A name="fore (back) ground"><B>fore (back) ground
</B></A><BR>fore (back) ground.</P>

<P><A name="fractal"><B>fractal</B></A><BR>
A mathematical expression used to represent complicated objects that would take an enormous amount of processing time to represent with polygons.  A fractal is self-similar, meaning that its shape looks the same from up close as it does from far away.</P>

<P><A name="fractal character"><B>fractal character
</B></A><BR></P>

<P><A name="frame rate"><B>frame rate</B></A><BR>
The number of frames displayed per second ( FPS ). The maximum is 60
FPS in the NTSC system.</P>

<P><A name="frame time"><B>frame time</B></A><BR>
</P>

<P><A name="full screen rectangle"><B>full screen rectangle</B></A><BR></P>

<P><A name="gamma correction"><B>gamma correction</B></A><BR>Though color intensity changes in a linear fashion, the response is normally nonlinear, since the output for any given input depends on the quality of the display device and the sensitivity of the human viewer.  Gamma correction refers to the action taken to correct for this nonlinearity.</P>

<P><A name="GBI"><B>GBI </B></A><BR>
Graphic Binary Interface. The display list interface used to render graphics. Each command or single instruction in the display list is 64 bits in length. The GBI command string is called the display list.</P>

<P><A name="GBI command"><B>GBI command</B></A><BR>--> <A href="#GBI">GBI</A></P>

<P><A name="GBI display command"><B>GBI display list command</B></A><BR> --> <A href="#GBI">GBI</A></P>

<P><A name="GBI macro"><B>GBI macro</B></A><BR>
--> <A href="#GBI">GBI</A></P>

<P><A name="general-use color register"><B>general-use color register</B></A><BR></P>

<P><A name="geometric primitive"><B>geometric primitive
</B></A><BR> --> <A href="#geometry primitive">geometry primitive</A></P>
<P><A name="geometric primitive command"><B>geometric primitive command</B></A><BR></P>

<P><A name="geometry"><B>geometry</B></A><BR>
The three-dimensional coordinate data or a graphic form created by
it.</P>

<P><A name="geometry engine"><B>geometry engine
</B></A><BR>A mechanism that executes numeric value calculations using 3-dimensional coordinate information to create geometric objects.</P>

<P><A name="geometry primitive"><B>geometry primitive
</B></A><BR>The basic solid shapes that comprise a complexly varied image.  Examples include points, lines and polygons (regions enclosed by lines).</P>

<P><A name="global state pointer"><B>global state pointer
</B></A><BR></P>

<P><A name="global state register"><B>global state register</B></A><BR>The register that specifies the configuration and synchronization of the pipeline inside the RDP. It sets the cycle type, the synchronization between the pipeline and the attributes, and the information about the
atomic primitive mode.</P>

<P><A name="global state structure"><B>global state structure</B></A><BR></P>

<P><A name="Gouraud shading"><B>Gouraud shading
</B></A><BR>A technique of shading to make curved surfaces look smooth by getting the color for each vertex and interpolating the vertex colors so vertices and edges to do stand out.</P>

<P><A name="graphics binary interface"><B>graphics binary interface</B></A><BR>The commands executed by the RSP microcode in order to render graphics. Each command is 64-bits in length.  The GBI command string is called the display list.</P>

<P><A name="graphics pipeline"><B>graphics pipeline</B></A><BR>The pipeline that creates the image. It consists of rasterizer, the
texture unit, texture filter, the color combiner, the blender, and memory
interface inside of the RDP.</P>

<P><A name="ground plane"><B>ground plane
</B></A><BR></P>

<P><A name="half pixel unit"><B>half pixel unit
</B></A><BR></P>

<P><A name="hard edge key"><B>hard edge key </B></A><BR></P>

<P><A name="hardware sprite"><B>hardware sprite
</B></A><BR></P>

<P><A name="hardware texture filter unit"><B>hardware texture filter unit</B></A><BR></P>

<P><A name="hidden bit"><B>hidden bit</B></A><BR>
The 9th bit created because the memory used by the RCP is 9-bit of RDRAM.  The RDP's memory interface (MI) is the only thing that can directly read and write this bit.  It is used, for example, to store the coverage value in the case of a 16-bit RGBA color image.</P>

<P><A name="high frequency noise"><B>high frequency noise</B></A><BR></P>

<P><A name="highlight"><B>highlight</B></A><BR>
The process used to express illumination from a light source. See also <A href="#specular highlight">specular highlight</A>.</P>

<P><A name="highlight intensity"><B>highlight intensity
</B></A><BR></P>

<P><A name="highly packed texture mode"><B>highly packed texture mode</B></A><BR></P>

<P><A name="host processor"><B>host processor</B></A><BR></P>

<P><A name="IA mode"><B>IA mode</B></A><BR>
Intensity alpha mode. The mode having the I (intensity) and alpha (opacity)
information at each texel. The 4-bit format is 3/1, the 8-bit format is
4/4 and the 16-bit format is 8/8-bit.</P>

<P><A name="idle cycle"><B>idle cycle</B></A><BR>
</P>

<P><A name="identity matrix"><B>identity matrix
</B></A><BR></P>

<P><A name="image pointer"><B>image pointer</B></A><BR></P>

<P><A name="image width"><B>image width</B></A><BR></P>

<P><A name="input operand"><B>input operand</B></A><BR></P>

<P><A name="intensity"><B>intensity</B></A><BR>
intensity.</P>

<P><A name="intensity alpha"><B>intensity alpha
</B></A><BR> --> <A href="#IA mode">IA mode</A></P>

<P><A name="intensity alpha (IA) texture"><B>intensity alpha (IA) texture</B></A><BR>A texture with intensity information and alpha information.  The size can be 4-bit(I=3bit, A=1bit) or 8-bit(I=4bit, A=4bit) or 16bit(I=8bit, A=8bit). Used when processing the transparency of a texture.</P>

<P><A name="intensity gradation"><B>intensity gradation
</B></A><BR>Graduation that uses intensity(i).</P>

<P><A name="intensity mode"><B>intensity mode
</B></A><BR>The mode having only the intensity information per texel. It has 4-bit and 8-bit formats.</P>

<P><A name="intensity ramp"><B>intensity ramp
</B></A><BR> = The transition difference (slope) of the intensity.</P>

<P><A name="intensity texture"><B>intensity texture
</B></A><BR>Very compact texture that only holds information regarding intensity, which is suitable when using less color.</P>

<P><A name="interlace mode"><B>interlace mode
</B></A><BR></P>

<P><A name="interleave"><B>interleave</B></A><BR></P>

<P><A name="interleave access"><B>interleave access
</B></A><BR></P>

<P><A name="internal edge"><B>internal edge</B></A><BR>Edges that two visible-displayed polygons share </P>

<P><A name="internal vertex buffer"><B>internal vertex buffer</B></A><BR></P>

<P><A name="interpenetrating mode"><B>interpenetrating mode</B></A><BR>This mode assumes that surfaces penetrate and are penetrated by other surfaces (interpenetration).  It is not as if you must use this mode to realize this kind of intersection between objects, but when this mode is set, the intersecting parts will be correctly anti-aliased.</P>

<P><A name="interpenetrating surface"><B>interpenetrating surface</B></A><BR></P>

<P><A name="interpolator"><B>interpolator</B></A><BR>interpolator (rewriter). Here, this is used to indicate the color converter in the color combiner.</P>

<P><A name="inverse kinematics"><B>inverse kinematics
</B></A><BR>The opposite of kinematics, this is a method for determining the angle of all the joints of a multi-jointed model, based on a specified end-point for the model. This approach can be used to animate humans and animals.</P>
<P><A name="I texture"><B>I texture</B></A><BR>
--> <A href="#intensity texture">intensity texture</A></P>

<P><A name="I value"><B>I value </B></A><BR>
The intensity value. Luminance value.</P>

<P><A name="jag part"><B>jag part</B></A><BR>
jag part.</P>

<P><A name="key frame"><B>key frame</B></A><BR></P>
<P><A name="label"><B>label</B></A><BR></P>

<P><A name="label region"><B>label region</B></A><BR></P>

<P><A name="lerp"><B>lerp</B></A><BR>
Line interpolation</P>

<P><A name="lerp blender mode"><B>lerp blender mode
</B></A><BR></P>

<P><A name="level of detail"><B>level of detail
</B></A><BR> --> <A href="#LOD">LOD</A></P>

<P><A name="lighting"><B>lighting</B></A><BR>
Illumination effects.  The 3D object is illuminated in a way so you can see that it has depth.  To use this, normal vectors must be set in the vertices.  For light there is <A href="#ambient light">ambient light</A> (uniform) and <A href="#diffuse light">diffuse light</A> (directional).</P>

<P><A name="lighting calculation"><B>lighting calculation</B></A><BR> --> <A href="#lighting">lighting</A></P>

<P><A name="lighting state"><B>lighting state
</B></A><BR></P>

<P><A name="linear interpolation"><B>linear interpolation</B></A><BR></P>

<P><A name="local vertex cache"><B>local vertex cache
</B></A><BR></P>

<P><A name="locate"><B>locate</B></A><BR></P>

<P><A name="LOD"><B>LOD</B></A><BR>
The level of detail which is used to determine or change the levels
of detail for objects that reside far away or near. Objects located far
away can be rendered with much less detail by setting the level, which
greatly improves the drawing rate.</P>

<P><A name="LOD fraction"><B>LOD fraction</B>
</A><BR></P>

<P><A name="LOD map"><B>LOD map</B></A><BR></P>

<P><A name="low level macro"><B>low level macro</B></A><BR></P>

<P><A name="LSB"><B>LSB</B></A><BR>
The lowest bit or byte in binary expression.</P>

<P><A name="mach band"><B>mach band</B></A><BR></P>
<P><A name="magic square order dither"><B>magic square order dither</B></A><BR></P>

<P><A name="mask"><B>mask</B></A><BR></P>

<P><A name="mask value"><B>mask value</B></A><BR>
</P>

<P><A name="material"><B>material</B></A><BR>
The qualities and characteristics of an object.</P>

<P><A name="material properties"><B>material properties</B></A><BR>The reflection and transparency characteristics of an object's material can be mathematically expressed by using the following data:</P>

<TABLE border="1" cellpadding="4">
  <TR>
    <TH>Reflection</TH>
    <TH>Transparency</TH></TR>
  <TR>
    <TD>Object's surface color<BR>
Mirror face factor<BR>
Plane roughness factor<BR>
Metal factor<BR>
Diffusion factor<BR>
</TD>
    <TD>Object's internal color<BR>
Object's density<BR>
Mirror face density<BR>
Inside roughness factor<BR>
Inflectional ratio<BR>
Diffusion factor</TD></TR>
</TABLE>

<P><A name="matrix"><B>matrix</B></A><BR>
Matrices are used to describe an object's position and direction in
three-dimensional space. Matrix calculations are used for coordinate transformations when rotating or moving an object in three-dimensional space and for projecting an object on the screen.</P>

<P><A name="matrix factor"><B>matrix factor</B></A><BR></P>

<P><A name="matrix stack"><B>matrix stack
</B></A><BR>The stack used to implement complex matrix operations. There are two types of stacks: a 10-element modeling matrix stack to hold data relating to the object's position or direction and a 1-element viewing matrix stack
to hold data relating to the viewing position or direction.</P>

<P><A name="memory color"><B>memory color</B></A><BR>The existing pixel color in the frame buffer.</P>

<P><A name="mesh object"><B>mesh object
</B></A><BR>The collection of vertices and triangle faces which forms an object.</P>

<P><A name="MIP map"><B>MIP map</B></A><BR>
When a texture is reduced in size, a moire appears that lowers the quality of display.  To get around this problem, a set of textures called MIP maps can be prepared at 1/2, 1/4, 1/8, etc. the height/width of the original texture pattern.  Then, depending on the scale of enlargement of the texture for a given distance from the viewpoint, the two most appropriate textures from this set can be selected and bilinearly and trilinearly interpolated to eliminate the moire.  There are several drawbacks to this process, however.  For example, you must use 2 Cycle mode to perform MIP mapping.  Also, you must store a number of texture patterns in the small texture memory.</P>

<P><A name="MIP map level"><B>MIP map level
</B></A><BR></P>

<P><A name="MIP mapping"><B>MIP mapping</B></A><BR> --> <A href="#MIP map">MIP map</A></P>

<P><A name="MIP map pyramid"><B>MIP map pyramid
</B></A><BR></P>

<P><A name="MIP map texture"><B>MIP map texture
</B></A><BR> --> <A href="#MIP map">MIP map</A></P>

<P><A name="mirror"><B>mirror</B></A><BR>
A method for inverting a texture horizontally or vertically.<BR>
<IMG src="../gif/mirror.gif"></P>

<P><A name="mirror flag"><B>mirror flag</B></A><BR></P>

<P><A name="mode bit"><B>mode bit </B></A><BR></P>

<P><A name="modeling coordinate position"><B>modeling coordinate position</B></A><BR></P>

<P><A name="modeling matrix"><B>modeling matrix
</B></A><BR>A 4 x 4 matrix that transforms points, lines, polygons and raster positions from local coordinates to world coordinates.</P>

<P><A name="model view"><B>model view</B></A><BR>
</P>

<P><A name="model view matrix"><B>model view matrix
</B></A><BR></P>

<P><A name="modulated texture"><B>modulated texture</B></A><BR>A texture that has been modulated by blending texture color and shade color.  Performed in the color combiner.</P>

<P><A name="morphing"><B>morphing</B></A><BR>
An animation technique used to transition between two or more shapes and images.</P>

<P><A name="motion path"><B>motion path</B></A><BR>A method of animating by preparing tracks for the motion of the object and the camera, and then moving them along that track to create the animation.</P>

<P><A name="MPEG"><B>MPEG </B></A><BR>
The abbreviation of "Motion Picture Experts Group." The digital compression
method for color animation.</P>

<P><A name="multi color text"><B>multi color text
</B></A><BR></P>

<P><A name="multi note"><B>multi note</B></A><BR>
</P>

<P><A name="multiple graphics task"><B>multiple graphics task</B></A><BR></P>

<P><A name="multi tile mode"><B>multi tile mode
</B></A><BR></P>

<P><A name="multi tile texture"><B>multi tile texture
</B></A><BR>By using the maximum of eight texture tiles to display a texture, it's possible to MIP map or use detail textures while in a 2-cycle mode.
</P>

<P><A name="mux"><B>mux </B></A><BR>
--> <A href="system.htm#multiplexor">multiplexor</A></P>

<P><A name="N64 font code"><B>N64 font code
</B></A><BR></P>

<P><A name="near clipping"><B>near clipping
</B></A><BR>A technique that clips any object that lies closer than a near plane. There is microcode that prevents clipping under certain conditions.</P>
<P><A name="near/far plane"><B>near/far plane</B></A><BR>The near plane is the plane of the viewing pyramid closest to the observer. The far plane is the farthest plane away from the observer.<BR> --> <A HREF="#viewing pyramid">viewing pyramid</A></P>

<P><A name="near/far ratio"><B>near/far ratio</B></A><BR></P>

<P><A name="noise dither"><B>noise dither</B></A><BR></P>

<P><A name="non full screen rectangle"><B>non full screen rectangle</B></A><BR></P>

<P><A name="non-interlace mode"><B>non-interlace mode</B></A><BR></P>

<P><A name="NOOP"><B>NOOP</B></A><BR></P>

<P><A name="NOOP mode"><B>NOOP mode</B></A><BR></P>
<P><A name="NURBS"><B>NURBS</B></A><BR>
= The abbreviation of "Non-Uniform Rational B-Spline." A method used
for expressing a curve or curved surface by using a high-level function.</P>

<P><A name="normalization"><B>normalization</B></A><BR></P>

<P><A name="normal vector"><B>normal vector</B></A><BR>Generally, the vector perpendicular to a plane or a line.  In the N64, normal vectors can be specified for vertices to determine which light a vertex will be illuminated by.</P>

<P><A name="Nyquist's law"><B>Nyquist's law</B></A><BR>The sampling theorem that says that if you perform the sampling at
more than twice the maximum frequency of the input signal, you can reproduce
the original signal accurately.</P>

<P><A name="object"><B>object </B></A><BR>
An object-coordinate model that is rendered as a collection of primitives.</P>

<P><A name="opacity"><B>opacity</B></A><BR>
--> <A href="#alpha value">alpha value</A></P>

<P><A name="opaque surface"><B>opaque surface
</B></A><BR></P>

<P><A name="original complete information"><B>original complete information</B></A><BR></P>

<P><A name="original face texture"><B>original face texture</B></A><BR></P>

<P><A name="ortho camera"><B>ortho camera</B></A><BR>Ortho camera.</P>

<P><A name="orthogonal projection"><B>orthogonal projection</B></A><BR></P>

<P><A name="orthogonal projection matrix"><B>orthogonal projection matrix</B></A><BR>
A projection transformation matrix that does not follow the laws of perspective, but is just an orthogonal projection.  It is a parallel field of view, so objects are projected with the same size, regardless of distance. In the N64, the calculations are made with the guOrtho() function.</P>

<P><A name="outer edge"><B>outer edge</B></A><BR>
--> <A href="#silhouette edge">silhouette edge</A></P>

<P><A name="overlay mode"><B>overlay mode
</B></A><BR> --> <A href="system.htm#overlay">overlay</A></P>

<P><A name="overlay surface mode"><B>overlay surface mode</B></A><BR></P>

<P><A name="pack level"><B>pack level</B></A><BR>
The level of complexity of texture color, shape etc.</P>

<P><A name="padding"><B>padding</B></A><BR>
When a texture tile is loaded, it is OK to have the pixel address of the square on a byte boundary, but if the row width of the tile is not on a 64-bit boundary, the hardware will automatically pad the rows in TMEM to be at a 64-bit boundary.</P>

<P><A name="page"><B>page</B></A><BR></P>

<P><A name="painter's algorithm"><B>painter's algorithm
</B></A><BR>A method for rendering polygons in the direction from the distance toward near the viewpoint.  This makes anti-aliasing work better.</P>

<P><A name="painter's algorithm procedure"><B>painter's algorithm procedure</B></A><BR></P>

<P><A name="paint mixer"><B>paint mixer</B></A>
<BR></P>

<P><A name="palette"><B>palette</B></A><BR></P>

<P><A name="palette number"><B>palette number </B></A><BR></P>

<P><A name="particle effect"><B>particle effect</B></A><BR>Effect that looks like it has been realized with a particle system.</P>

<P><A name="particle fade out"><B>particle fade out
</B></A><BR></P>

<P><A name="particle system"><B>particle system
</B></A><BR>A particle is a very small object. A particle system is a modeling technique that uses many of these particles. It is an ideal technique for
expressing something that is comprised of many pieces gathered together
based on some general law.</P>

<P><A name="PASS mode"><B>PASS mode</B></A><BR>
</P>

<P><A name="perspective-corrected texture"><B>perspective-corrected texture</B></A><BR>Texture for which the calculation of the coordinate values is perspective-corrected.</P>

<P><A name="perspective correction"><B>perspective correction</B></A><BR>Correction done to boost the computational precision of the texture coordinate values.</P>

<P><A name="perspective normalization"><B>perspective normalization</B></A><BR></P>

<P><A name="perspective normalization factor"><B>perspective normalization factor</B></A><BR></P>

<P><A name="perspective projection"><B>perspective projection</B></A><BR>Projecting a figure in the plane of projection. In other words, showing a 3D object on a 2D screen.</P>

<P><A name="perspective projection matrix"><B>perspective projection matrix</B></A><BR>
A projection transformation matrix that uses the laws of perspective, and not just orthogonal projection.  The projection transformation makes objects in the foreground bigger and objects in the distance smaller.  In the N64, the calculations are made with the guPerspective() function.</P>

<P><A name="pipeline mode"><B>pipeline mode
</B></A><BR></P>

<P><A name="pipeline pixel color"><B>pipeline pixel color
</B></A><BR></P>

<P><B><A name="pitch">pitch</A><BR>
<IMG src="../gif/pitch.gif"></B>--> <A href="#yaw">yaw</A>, <A href="#roll">roll</A></P>

<P><A name="pixel"><B>pixel</B></A><BR>
A single dot on the screen. Minimum unit needed for rendering an object.</P>

<P><A name="pixel color"><B>pixel color </B></A><BR>The current pixel color. The manual differentiates between this and memory color, which is the pixel color existing in memory.</P>

<P><A name="pixel element size"><B>pixel element size
</B></A><BR></P>

<P><A name="pixel value"><B>pixel value</B></A><BR></P>

<P><A name="point sampling"><B>point sampling</B></A><BR>Sampling on the assumption that each texel of the source texture represents one pixel on the display screen.  This is optimal when the texel size and the pixel size have a 1:1 relationship, but otherwise you cannot get a faithful map.</P>

<P><A name="polygon"><B>polygon</B></A><BR>
Three-dimensional objects are represented by combining the planes of polygons together.</P>

<P><A name="pop-out and pop-in"><B>pop-out and pop-in
</B></A><BR>Pop-out means that the object moves away and suddenly disappears from the screen. Pop-in means that the object moves in and suddenly appears
on the screen.<BR></P>

<P><A name="positional light"><B>positional light
</B></A><BR></P>

<P><A name="pre-writing"><B>pre-writing
</B></A><BR></P>

<P><A name="primitive"><B>primitive</B></A><BR>
The basic elements (dots, lines, and polygons) to be used to draw 3D
objects.</P>

<P><A name="primitive color"><B>primitive color
</B></A><BR>The color of each primitive itself.</P>

<P><A name="primitive color register"><B>primitive color register</B></A><BR>A general-use register in the color combiner that is set with the gDPSetPrimColor function.  This register is used for primitive color settings, and for setting the color of the first highlight and the LOD fraction.</P>

<P><A name="primitive edge"><B>primitive edge
</B></A><BR></P>

<P><A name="primitive tile"><B>primitive tile
</B></A><BR></P>

<P><A name="projection matrix"><B>projection matrix</B></A><BR>A non-perspective projection transformation performed without reduction to look like a regular engineering drawing.</P>

<P><A name="random alpha source"><B>random alpha source</B></A><BR>Refers to use of a random number for the threshold value alpha in an alpha compare.  This is called an alpha dither comparison, and it is used for a particle effect.</P>

<P><A name="raster"><B>raster</B></A><BR>
A scan line. The horizontal line on the display screen (TV). </P>

<P><A name="raster image"><B>raster image</B></A><BR>An image displayed by using the raster scan line </P>

<P><A name="rasterization command"><B>rasterization command</B></A><BR></P>

<P><A name="rasterize"><B>rasterize</B></A><BR>
To use each vertex and color of a primitive to create pixels inside the primitive. Each pixel has attributes such as coordinates, depth value, color value, LOD
level, cover value, and so on that are used in calculations later. </P>

<P><A name="RDP display list"><B>RDP display list
</B></A><BR> --> <A href="#display list">display list</A></P>

<P><A name="RDP pipeline"><B>RDP pipeline</B></A><BR>The rendering functionality blocks are structured in a pipeline in the RDP of the N64 RCP.</P>

<P><A name="RDP state"><B>RDP state</B></A><BR></P>


<P><A name="rectangle"><B>rectangle</B></A><BR>
A quadrilateral whose alternate edges are parallel to each other in object coordinates.</P>

<P><A name="reflection highlight"><B>reflection highlight</B></A><BR> --> <A href="#specular highlight">specular highlight</A></P>

<P><A name="reflection mapping"><B>reflection mapping
</B></A><BR>A texture mapping method that dynamically calculates the texture coordinate that reflects into the position by using the normal vector of the reflection mapping object. Used to show the surroundings reflecting on the object's surface. </P>

<P><A name="reject box"><B>reject box
</B></A><BR>The rectangle that defines the area in which the reject process is performed.</P>

<P><A name="rejection process"><B>rejection process
</B></A><BR> --> <A href="#reject process">reject process</A></P>

<P><A name="reject process"><B>reject process</B></A><BR>A process that controls whether triangles are to be drawn in a certain fixed area around the outside the screen.  If all three vertices of a triangle are inside this area, the triangle is drawn.  But if even one vertex is not inside this area, then no part of the triangle is drawn.  This process is less intensive than clipping.</P>

<P><A name="rendering"><B>rendering</B></A><BR>
To convert a specified primitive in the object coordinate into image data for the frame buffer.</P>

<P><A name="rendering mode"><B>rendering mode
</B></A><BR></P>

<P><A name="render state"><B>render state</B></A><BR></P>

<P><A name="render time"><B>render time</B></A><BR></P>

<P><A name="RGBA mode"><B>RGBA mode</B></A><BR>
The mode having the RGB (red, green, blue) and alpha information at
each texel. The 16-bit format is 5/5/5/1 and the 32-bit format is 8/8/8/8-bit.
</P>

<P><A name="roll"><B>roll</B></A><BR>
<IMG src="../gif/roll.gif">--> <A href="#pitch">pitch</A>, <A href="#yaw">yaw</A></P>

<P><A name="RSP geometry engine"><B>RSP geometry engine
</B></A><BR></P>

<P><A name="sampling error"><B>sampling error
</B></A><BR></P>

<P><A name="scale up factor"><B>scale up factor
</B></A><BR>The setting in the VI (video interface) that is the scaling factor for enlarging or reducing images. You can specify from 0.25 through 1.0
for the X direction and from 0.05 through 1.0 for the Y direction.</P>

<P><A name="scaling modeling matrix"><B>scaling modeling matrix</B></A><BR></P>

<P><A name="scan line"><B>scan line</B></A><BR></P>
<P><A name="scissoring"><B>scissoring</B></A><BR>
A process that cuts off parts 2-dimensionally that lie outside the
drawing rectangle. RDP processes this in N64.</P>

<P><A name="scissoring area"><B>scissoring area</B></A><BR> --> <A href="#scissoring box">scissoring box</A></P>

<P><A name="scissoring box"><B>scissoring box
</B></A><BR>The area in which <A href="#scissoring">scissoring</A> is performed.</P>

<P><A name="scissoring rectangle"><B>scissoring rectangle</B></A><BR> --> <A href="#scissoring box">scissoring box</A></P>

<P><A name="screen coordinates"><B>screen coordinates</B></A><BR></P>

<P><A name="screen pixel"><B>screen pixel
</B></A><BR></P>

<P><A name="sequence bank file"><B>sequence bank file
</B></A><BR></P>

<P><A name="s factor"><B>s factor</B></A><BR></P>

<P><A name="shade alpha"><B>shade alpha</B></A><BR></P>

<P><A name="shade color"><B>shade color </B></A><BR></P>

<P><A name="shading process"><B>shading process
</B></A><BR>The process of color interpolation inside polygons being rasterized and between vertices of a line.  Examples include <A href="#flat shading">flat shading</A> and <A href="#Gouraud shading">Gouraud shading</A>.</P>

<P><A name="Sharp extrapolation"><B>Sharp extrapolation</B></A><BR></P>

<P><A name="Sharp mode"><B>Sharp mode</B></A><BR>
</P>

<P><A name="Sharp texture"><B>Sharp texture</B></A><BR>Sharp texture is used under the same circumstances as Detail texture.  When approaching the maximum level of MIP mapping, a Sharp texture is artificially created from the pair of the maximum level texture and the next level texture.</P>
<P><A name="shift value"><B>shift value</B></A><BR></P>

<P><A name="shuffling"><B>shuffling</B></A><BR></P>
<P><A name="s index and t index"><B>s index and t index
</B></A><BR></P>

<P><A name="silhouette"><B>silhouette</B></A><BR>
</P>

<P><A name="silhouette aliasing"><B>silhouette aliasing</B></A><BR></P>

<P><A name="silhouette edge"><B>silhouette edge</B></A><BR>The part of the polygon edge that is shared with the background.</P>

<P><A name="simple anti-aliasing"><B>simple anti-aliasing</B></A><BR></P>

<P><A name="simple morphing"><B>simple morphing
</B></A><BR></P>

<P><A name="smooth flip book animation"><B>smooth flip book animation</B></A><BR></P>

<P><A name="smooth shading"><B>smooth shading
</B></A><BR></P>

<P><A name="source image"><B>source image</B>
</A><BR></P>

<P><A name="source texture array"><B>source texture array</B></A><BR></P>

<P><A name="source texture image"><B>source texture image
</B></A><BR></P>

<P><A name="span"><B>span</B></A><BR>
A term for length.</P>

<P><A name="span buffer"><B>span buffer</B></A><BR>A line buffer in the RDP used to process a stack of information at
one time to achieve high speed random access while RDRAM cannot achieve
high speed random access.</P>

<P><A name="span cache"><B>span cache</B></A><BR>
</P>

<P><A name="specular highlight"><B>specular highlight
</B></A><BR>The bright spot that appears when light reflects off a shiny object. Because it is implemented by using a texture, you cannot use a specular
highlight on a texture-mapped object.</P>

<P><A name="spike"><B>spike</B></A><BR></P>

<P><A name="sprite"><B>sprite</B></A><BR>
A rectangle image that is drawn by using a texture. In N64, texture
is used to draw a sprite.</P>

<P><A name="sprite animation"><B>sprite animation
</B></A><BR></P>

<P><A name="sprite structure"><B>sprite structure</B>
</A><BR></P>

<P><A name="standard bearer matrix order dither"><B>standard bearer matrix order dither</B></A><BR></P>

<P><A name="s, t coordinate"><B>s, t coordinate</B></A><BR>A pixel's texture coordinate values. The "s" coordinate defines the horizontal component of the texture while the "t" coordinate defines the vertical component.</P>

<P><A name="stereo graphics"><B>stereo graphics
</B></A><BR></P>

<P><A name="stipple transparency process"><B>stipple transparency process</B></A><BR>A transparency process performed at the level of individual pixels.</P>

<P><A name="stream output"><B>stream output</B></A><BR></P>

<P><A name="sub pixel"><B>sub pixel</B></A><BR>
A piece (1/16) of a pixel obtained when you split one pixel into 16
(4 by 4) sub-pixels. Sub-pixels are used to compute a coverage value.</P>

<P><A name="sub pixel scan line"><B>sub pixel scan line
</B></A><BR></P>

<P><A name="sub surface mode"><B>sub surface mode
</B></A><BR></P>

<P><A name="sub tile"><B>sub tile</B></A><BR></P>

<P><A name="super sampling"><B>super sampling
</B></A><BR></P>

<P><A name="surface"><B>surface</B></A><BR>
The surface of a polygon</P>

<P><A name="surface color"><B>surface color
</B></A><BR></P>

<P><A name="synchronous code"><B>synchronous code</B></A><BR></P>

<P><A name="synchronous scenario"><B>synchronous scenario</B></A><BR></P>

<P><A name="texel"><B>texel</B></A><BR>
A point(pixel) within a texture map.</P>

<P><A name="texel space"><B>texel space</B></A><BR></P>

<P><A name="texel space coordinate system"><B>texel space coordinate system</B></A><BR></P>

<P><A name="texel type"><B>texel type</B></A><BR>
</P>

<P><A name="texture"><B>texture</B></A><BR>
--> <A href="#texture map">texture map</A></P>

<P><A name="texture caching"><B>texture caching
</B></A><BR></P>

<P><A name="texture color"><B>texture color</B></A><BR></P>

<P><A name="texture coordinate"><B>texture coordinate</B></A><BR> --> <A href="#s, t coordinate">s, t coordinate</A></P>

<P><A name="texture correction"><B>texture correction</B></A><BR></P>

<P><A name="texture decal"><B>texture decal</B></A><BR>Using a texture to transfer a pattern (decalcomania).</P>

<P><A name="texture edge"><B>texture edge</B></A><BR></P>

<P><A name="texture edge mode"><B>texture edge mode
</B></A><BR></P>

<P><A name="texture engine"><B>texture engine
</B></A><BR> --> <A href="system.htm#TX">TX</A></P>

<P><A name="texture filter"><B>texture filter
</B></A><BR> --> <A href="system.htm#TF">TF</A></P>

<P><A name="texture image"><B>texture image
</B></A><BR></P>

<P><A name="texture image area"><B>texture image are
</B></A><BR></P>

<P><A name="texture lookup table"><B>texture lookup table</B></A><BR> --> <A href="#TLUT">TLUT</A></P>

<P><A name="texture map"><B>texture map</B></A><BR>Bitmapped pictures or patterns placed onto the surface of polygon.
It may be simply called a texture.</P>

<P><A name="texture mapping"><B>texture mapping
</B></A><BR>The process of placing a texture onto the surface of a polygon.</P>

<P><A name="texture memory"><B>texture memory</B></A><BR>The 4 Kbyte special on-chip memory only for texture built into the
RDP. Because it's separated into 4 simultaneously accessible banks, it
can output four texels with one clock.</P>

<P><A name="texture offset"><B>texture offset
</B></A><BR></P>

<P><A name="texture perspective correction"><B>texture perspective correction</B></A><BR></P>

<P><A name="texture property"><B>texture property
</B></A><BR></P>

<P><A name="texture rectangle"><B>texture rectangle
</B></A><BR></P>

<P><A name="texture rectangle primitive"><B>texture rectangle primitive</B></A><BR>The texture rectangle (sprite) drawn to the screen coordinates.</P>

<P><A name="texture shuffle"><B>texture shuffle
(bug) </B></A><BR></P>

<P><A name="texture state"><B>texture state
</B></A><BR></P>

<P><A name="texture tile"><B>texture tile</B></A><BR></P>

<P><A name="texture tile descriptor"><B>texture tile descriptor</B></A><BR>TMEM can store a maximum of eight texture tile descriptors that hold the following information for each tile: the texture size, flags of wrap/clamp/mirror, the format, the TMEM address, and so on.</P>

<P><A name="texture tile number"><B>texture tile number
</B></A><BR></P>

<P><A name="texturing"><B>texturing</B></A><BR></P>
<P><A name="texturing primitive"><B>texturing primitive
</B></A><BR></P>

<P><A name="tile"><B>tile</B></A><BR></P>

<P><A name="tile descriptor"><B>tile descriptor</B></A><BR></P>

<P><A name="tile index"><B>tile index</B></A><BR>
</P>

<P><A name="tile number"><B>tile number </B>
</A><BR></P>

<P><A name="TLUT"><B>TLUT</B></A><BR>
The color index palette that holds the color information corresponding
to each palette number that is created in the last 2 Kbytes of TMEM when
you use the color index (CI) mode.</P>

<P><A name="TLUT entry"><B>TLUT entry</B></A><BR>
</P>

<P><A name="TLUT palette"><B>TLUT palette</B></A><BR> --> <A href="#TLUT">TLUT</A></P>

<P><A name="TMEM"><B>TMEM </B></A><BR>
 --> <A href="#texture memory">texture memory</A></P>

<P><A name="transformation modeling matrix"><B>transformation modeling matrix</B></A><BR></P>

<P><A name="transparent decal surface mode"><B>transparent decal surface mode</B></A><BR></P>

<P><A name="transparent fog"><B>transparent fog</B></A><BR></P>

<P><A name="transparent object"><B>transparent object</B></A><BR></P>

<P><A name="transparent polygon"><B>transparent polygon</B></A><BR></P>

<P><A name="transparent surface"><B>transparent surface</B></A><BR></P>

<P><A name="transparent surface mode"><B>transparent surface mode</B></A><BR></P>

<P><A name="triangle"><B>triangle</B></A><BR>
triangle.</P>

<P><A name="triangle list"><B>triangle list
</B></A><BR></P>

<P><A name="triangle list architecture"><B>triangle list architecture</B></A><BR></P>

<P><A name="triangle list pointer"><B>triangle list pointer</B></A><BR></P>

<P><A name="trilinear"><B>trilinear</B></A><BR>
--> <A href="#trilinear interpolation">trilinear interpolation</A></P>

<P><A name="trilinear interpolation"><B>trilinear interpolation</B></A><BR>The three-dimensional linear interpolation provided to the vertical, horizontal, and depth directions.</P>

<P><A name="trilinear MIP mapping"><B>trilinear MIP mapping</B></A><BR></P>

<P><A name="true color texture"><B>true color texture
</B></A><BR></P>

<P><A name="turbo display list"><B>turbo display list
</B></A><BR></P>

<P><A name="turbo triangle list"><B>turbo triangle list
</B></A><BR></P>

<P><A name="turbo vertex"><B>turbo vertex
</B></A><BR></P>

<P><A name="vertex"><B>vertex</B></A><BR>
A point where two or more lines intersect in 3D space.</P>

<P><A name="vertex alpha"><B>vertex alpha
</B></A><BR>The alpha value (opacity value) specified by the vertex.</P>

<P><A name="vertex cache"><B>vertex cache
</B></A><BR>Cache that holds the vertex data after the coordinate transformation operation. There are 16 of those.</P>

<P><A name="vertex conversion"><B>vertex conversion</B></A><BR></P>

<P><A name="vertex fog"><B>vertex fog</B></A><BR>
</P>

<P><A name="vertex list"><B>vertex list</B></A><BR></P>

<P><A name="vertex list pointer"><B>vertex list pointer
</B></A><BR></P>

<P><A name="vertex state"><B>vertex state</B></A>
<BR></P>

<P><A name="video display logic"><B>video display logic
</B></A><BR>The VI (video interface).</P>

<P><A name="video hardware"><B>video hardware
</B></A><BR></P>

<P><A name="video mode"><B>video mode</B></A><BR>
</P>

<P><A name="viewing matrix"><B>viewing matrix
</B></A><BR></P>

<P><A name="viewing pyramid"><B>viewing pyramid
</B></A><BR>The definition of the three-dimensional area that shows the view (inside the screen).<BR><IMG src="../gif/viewing.gif"></P>

<P><A name="view point"><B>view point</B></A><BR>
View point.</P>

<P><A name="view port"><B>view port</B></A><BR>
The region of the screen ultimately occupied by the image when it is displayed.  To give an example with a camera, it is the size of the developed picture.</P>

<P><A name="volume culling"><B>volume culling
</B></A><BR>A technique that checks to see which parts of a complex object are completely off-screen. Then it culls (removes) all operations in the display list that deal with these off-screen objects.</P>

<P><A name="watermark process"><B>watermark process</B></A><BR></P>

<P><A name="wireframe"><B>wireframe</B></A><BR>A shape comprised solely of the outlines of an object.</P>

<P><A name="world coordinate system"><B>world coordinate system</B></A><BR></P>

<P><A name="wrap"><B>wrap</B></A><BR>
A technique that creates large textures by repeatedly displaying a small texture over and over. If you use wrap technique, the texture size must be an exponent of 2. <BR><IMG src="../gif/lap.gif"></P>

<P><A name="wraparound object"><B>wraparound object</B></A><BR></P>

<P><A name="wrapping"><B>wrapping</B></A><BR></P>

<P><A name="yaw"><B>yaw</B></A><BR>
<IMG src="../gif/yaw.jpg"> --> <A href="#pitch">pitch</A>, <A href="#roll">roll</A></P>

<P><A name="YUV"><B>YUV </B></A><BR>
The digital video signal standard consisting of the intensity (Y) and
the color difference (UV) components. Because human eyes are not so sensitive
to the color component, it decreases the sampling of the color component
and provides effective compression. For example, it is used in MPEG animation.
</P>

<P><A name="YUV format"><B>YUV format</B></A><BR>
</P>

<P><A name="YUV pixel"><B>YUV pixel</B></A><BR></P>
<P><A name="YUV-RGB conversion"><B>YUV-RGB conversion</B>
</A><BR>The conversion from YUV into RGB provided by the texture filter and the color combiner.</P>

<P><A name="zap"><B>zap</B></A><BR>
To force the coverage value to be 1.0 so the VI does not perform anti-aliasing.
</P>

<P><A name="Z buffer"><B>Z buffer</B></A><BR>
A buffer or its algorithm that holds depth values used to display the
closest polygon from a given view point A technique that removes shaded
area.</P>

<P><A name="Z precision"><B>Z precision</B></A><BR></P>

<P><A name="Z stepper"><B>Z stepper</B></A><BR>
One of the hardware units in the anti-aliasing process.  It calculates an 18-bit Z value for each pixel of a primitive.</P>

<P><A name="Z sub pixel correction"><B>Z sub pixel correction</B></A></P>


</BODY>
</HTML>
