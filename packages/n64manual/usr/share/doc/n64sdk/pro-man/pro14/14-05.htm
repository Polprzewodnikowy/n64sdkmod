<html>
<head>
<link rel=stylesheet type="text/css" href="../../mobile/allman.css">
<title>Chapter 14 - Texture Rectangles (Hardware Sprites)</title>
<!-- Editor: Paula W
      Notes: Added link to style-sheet, performed spell check. -->
</head>

<h1>14.5 Tiling Large Images</h1>

<p>Sometimes it is desirable to perform <a href="../../keywords/index/data/graphics.htm#rendering" target="keywords">rendering</a> large textures, i.e. textures to large enough to fit entirely into TMEM. This can be accomplished via tiling or breaking the large image up into smaller rectangular tiles that do fit into TMEM. The tiles are rendered onto primitives that form a mesh coincident with the texture tiling. The textured rectangle primitive is a useful primitive for tiling a background image in a <a href="../../keywords/index/data/graphics.htm#sprite" target="keywords">sprite</a> game, for instance. If you perform <a href="../../keywords/index/data/graphics.htm#point sampling" target="keywords">point sampling</a> the texture tile, it is only necessary to load the number of <a href="../../keywords/index/data/graphics.htm#texel" target="keywords">texels</a> you wish to display. However, if you want to perform <a href="../../keywords/index/data/graphics.htm#bilinear filtering" target="keywords">bilinear filtering</a> the texture, you must load a border region of one texel around the tile so that the interpolation works correctly at the edges of the tile. Please see <a href="../pro13/13-07.htm#05-03">Section 13.7.5.3 &QUOT;Bilinear Filtering and Point Sampling&QUOT;</a> for more information. </p>


<p align="right"><a href="index.htm#index"><img alt="UP" src="../../gif/index.gif" border=0></a></p><hr>
</body> </html>
