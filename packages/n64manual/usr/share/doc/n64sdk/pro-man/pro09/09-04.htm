<html>
<head>
<link rel=stylesheet type="text/css" href="../../mobile/allman.css">
<title>Chapter 9 - Basic Memory Management</title>
<!-- Editor: Paula W
      Notes: Added link to style-sheet, performed spell check. -->
</head>

<h1>9.4 SP Addressing</h1>

<p>The SP <A target="keywords" HREF="../../keywords/index/data/system.htm#microcode">microcode</a> makes address references also, but these references are only to the local memory (IMEM and DMEM) on the chip.  With the current software architecture, the application does not program the SP directly, and need not concern itself with IMEM and DMEM accesses.</p>

<p>DRAM references, however, concern the application, because large data structures stored in DRAM are passed by reference.  These include <a href="../../keywords/index/data/graphics.htm#matrix" target="keywords">matrices</a>, <a href="../../keywords/index/data/graphics.htm#vertex" target="keywords">vertex</a> lists, textures, and the <a href="../../keywords/index/data/graphics.htm#display list" target="keywords">display lists</a> themselves.  As for the CPU, the addresses given to be SP for these data objects are also <A target="keywords" HREF="../../keywords/index/data/system.htm#virtual address">virtual addresses</A>, but the mapping from virtual to physical address is significantly different.  The SP microcode maintains 16 locations in DMEM that act as <A target="keywords" HREF="../../keywords/index/data/system.htm#segment base register">segment base registers</A>.  An "SP virtual" address is presented to the SP microcode in the form of a &LT;segment number, segment offset&GT; pair encoded into a 32-bit word.  To compute a physical DRAM address, the microcode adds the contents of the corresponding segment base register to the given offset. </p>


<p align="right"><a href="index.htm#index"><img alt="UP" src="../../gif/index.gif" border=0></a></p><hr>
</body> </html>
