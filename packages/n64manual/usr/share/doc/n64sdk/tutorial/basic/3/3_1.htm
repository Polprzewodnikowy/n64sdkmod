<HTML>
<HEAD>
<TITLE>N64 Tutorial-N64 Programming Basics-Chapter 3  The Display List and Tasks</TITLE>
<link rel=stylesheet type="text/css" href="../../../mobile/allman.css">
<!-- Editor Notes: Matt Park created file 9/20/1999
-->
</HEAD>
<BODY BGCOLOR="#ffffff">
<BASE TARGET="keywords">
<BR>
<FONT Style="font-size:16pt"><B>CHAPTER 3  THE DISPLAY LIST AND TASKS</B></FONT>
<BR><BR>
<HR SIZE=3 NOSHADE>
<P>
<BR>
<FONT Style="font-size:12pt"><B>3.1   Rendering Basics  - The Display List</B></FONT>
<BR>
</P>
<P>
 In the program we explained in Chapter 2, values are directly written into the framebuffer inside the drawing function, and the animation of the whole screen changing color is implemented by gradually changing the value.<BR><BR>
     However, writing directly into the framebuffer is generally not a very good idea, because of problems relating to execution speed and the consistency of the buffer contents.  Moreover, if you want to display 3D polygons, you have to render the 3D models on your own, so the technique of directly writing into the framebuffer has real limitations.  It is much better to take advantage of the special characteristics of the N64 hardware for graphics-related processes. <BR><BR>
 To perform graphics processes efficiently on the N64, the first thing you need to do is understand the concept of the display list.  By using display lists, you can leave rendering to another processor, and not to the CPU, creating programs that make better use of the N64 hardware.<BR><BR>
The aim of this chapter is to give you a basic understanding of the display list.  We will do this using a sample program that implements 2D animation of a single-color rectangle.<BR><BR>
The items explained in this chapter form the essential foundation of N64 programming, so we will cover them one at a time.
</P>
</BODY>
</HTML>
