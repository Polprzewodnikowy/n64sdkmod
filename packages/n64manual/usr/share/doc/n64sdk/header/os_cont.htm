<HTML><HEAD>
<TITLE></TITLE>
</HEAD></BODY>
<PRE>
<FONT COLOR="red">/*====================================================================
 * os_cont.h
 *
 * Copyright 1995, Silicon Graphics, Inc.
 * All Rights Reserved.
 *
 * This is UNPUBLISHED PROPRIETARY SOURCE CODE of Silicon Graphics,
 * Inc.; the contents of this file may not be disclosed to third
 * parties, copied or duplicated in any form, in whole or in part,
 * without the prior written permission of Silicon Graphics, Inc.
 *
 * RESTRICTED RIGHTS LEGEND:
 * Use, duplication or disclosure by the Government is subject to
 * restrictions as set forth in subdivision (c)(1)(ii) of the Rights
 * in Technical Data and Computer Software clause at DFARS
 * 252.227-7013, and/or in similar or successor clauses in the FAR,
 * DOD or NASA FAR Supplement. Unpublished - rights reserved under the
 * Copyright Laws of the United States.
 *====================================================================*/</FONT>

<FONT COLOR="red">/*---------------------------------------------------------------------*
        Copyright (C) 1998 Nintendo. (Originated by SGI)
        
        $RCSfile: os_cont.h,v $
        $Revision: 1.1 $
        $Date: 1998/10/09 08:01:05 $
 *---------------------------------------------------------------------*/</FONT>

#ifndef _OS_CONT_H_
#define	_OS_CONT_H_

#ifdef _LANGUAGE_C_PLUS_PLUS
extern &quot;C&quot; {
#endif

#include &lt;PR/ultratypes.h&gt;
#include &quot;os_message.h&quot;


#if defined(_LANGUAGE_C) || defined(_LANGUAGE_C_PLUS_PLUS)

<FONT COLOR="red">/**************************************************************************
 *
 * Type definitions
 *
 */</FONT>

<FONT COLOR="red">/*
 * Structure for controllers 
 */</FONT>

typedef struct {
	u16     type;                   <FONT COLOR="red">/* Controller Type */</FONT>
	u8      status;                 <FONT COLOR="red">/* Controller status */</FONT>
	u8	errno;
}OSContStatus;

typedef struct {
	u16     button;
	s8      stick_x;		<FONT COLOR="red">/* -80 &lt;= stick_x &lt;= 80 */</FONT>
	s8      stick_y;		<FONT COLOR="red">/* -80 &lt;= stick_y &lt;= 80 */</FONT>
	u8	errno;
} OSContPad;

typedef struct {
	void    *address;               <FONT COLOR="red">/* Ram pad Address:  11 bits */</FONT>
	u8      databuffer[32];         <FONT COLOR="red">/* address of the data buffer */</FONT>
        u8      addressCrc;             <FONT COLOR="red">/* CRC code for address */</FONT>
	u8      dataCrc;                <FONT COLOR="red">/* CRC code for data */</FONT>
	u8	errno;
} OSContRamIo;


#endif <FONT COLOR="red">/* defined(_LANGUAGE_C) || defined(_LANGUAGE_C_PLUS_PLUS) */</FONT>

<FONT COLOR="red">/**************************************************************************
 *
 * Global definitions
 *
 */</FONT>

<FONT COLOR="red">/*
 *  Controllers  number
 */</FONT>

#ifndef _HW_VERSION_1
#define MAXCONTROLLERS  4
#else
#define MAXCONTROLLERS  6
#endif

<FONT COLOR="red">/* controller errors */</FONT>
#define CONT_NO_RESPONSE_ERROR          0x8
#define CONT_OVERRUN_ERROR              0x4
#ifdef _HW_VERSION_1
#define CONT_FRAME_ERROR                0x2
#define CONT_COLLISION_ERROR            0x1
#endif 

<FONT COLOR="red">/* Controller type */</FONT>

#define CONT_ABSOLUTE           0x0001
#define CONT_RELATIVE           0x0002
#define CONT_JOYPORT            0x0004
#define CONT_EEPROM		0x8000
#define CONT_EEP16K		0x4000
#define	CONT_TYPE_MASK		0x1f07
#define	CONT_TYPE_NORMAL	0x0005
#define	CONT_TYPE_MOUSE		0x0002
#define	CONT_TYPE_VOICE		0x0100

<FONT COLOR="red">/* Controller status */</FONT>

#define CONT_CARD_ON            0x01
#define CONT_CARD_PULL          0x02
#define CONT_ADDR_CRC_ER        0x04
#define CONT_EEPROM_BUSY	0x80

<FONT COLOR="red">/* Buttons */</FONT>

#define CONT_A      0x8000
#define CONT_B      0x4000
#define CONT_G	    0x2000
#define CONT_START  0x1000
#define CONT_UP     0x0800
#define CONT_DOWN   0x0400
#define CONT_LEFT   0x0200
#define CONT_RIGHT  0x0100
#define CONT_L      0x0020
#define CONT_R      0x0010
#define CONT_E      0x0008
#define CONT_D      0x0004
#define CONT_C      0x0002
#define CONT_F      0x0001

<FONT COLOR="red">/* Nintendo's official button names */</FONT>

#define A_BUTTON	CONT_A
#define B_BUTTON	CONT_B
#define L_TRIG		CONT_L
#define R_TRIG		CONT_R
#define Z_TRIG		CONT_G
#define START_BUTTON	CONT_START
#define U_JPAD		CONT_UP
#define L_JPAD		CONT_LEFT
#define R_JPAD		CONT_RIGHT
#define D_JPAD		CONT_DOWN
#define U_CBUTTONS	CONT_E
#define L_CBUTTONS	CONT_C
#define R_CBUTTONS	CONT_F
#define D_CBUTTONS	CONT_D

<FONT COLOR="red">/* Controller error number */</FONT>

#define	CONT_ERR_NO_CONTROLLER		PFS_ERR_NOPACK 		<FONT COLOR="red">/* 1 */</FONT>
#define	CONT_ERR_CONTRFAIL		CONT_OVERRUN_ERROR	<FONT COLOR="red">/* 4 */</FONT>
#define	CONT_ERR_INVALID		PFS_ERR_INVALID		<FONT COLOR="red">/* 5 */</FONT>
#define	CONT_ERR_DEVICE			PFS_ERR_DEVICE 		<FONT COLOR="red">/* 11 */</FONT>
#define	CONT_ERR_NOT_READY		12
#define	CONT_ERR_VOICE_MEMORY		13
#define	CONT_ERR_VOICE_WORD		14
#define	CONT_ERR_VOICE_NO_RESPONSE	15


#if defined(_LANGUAGE_C) || defined(_LANGUAGE_C_PLUS_PLUS)

<FONT COLOR="red">/**************************************************************************
 *
 * Macro definitions
 *
 */</FONT>


<FONT COLOR="red">/**************************************************************************
 *
 * Extern variables
 *
 */</FONT>


<FONT COLOR="red">/**************************************************************************
 *
 * Function prototypes
 *
 */</FONT>

<FONT COLOR="red">/* Controller interface */</FONT>

extern s32		osContInit(OSMesgQueue *, u8 *, OSContStatus *);
extern s32		osContReset(OSMesgQueue *, OSContStatus *);
extern s32		osContStartQuery(OSMesgQueue *);
extern s32		osContStartReadData(OSMesgQueue *);
#ifndef _HW_VERSION_1
extern s32		osContSetCh(u8);
#endif
extern void		osContGetQuery(OSContStatus *);
extern void		osContGetReadData(OSContPad *);


#endif  <FONT COLOR="red">/* defined(_LANGUAGE_C) || defined(_LANGUAGE_C_PLUS_PLUS) */</FONT>

#ifdef _LANGUAGE_C_PLUS_PLUS
}
#endif

#endif <FONT COLOR="red">/* !_OS_CONT_H_ */</FONT>
</PRE>
</BODY>
