<HTML><HEAD>
<TITLE></TITLE>
</HEAD></BODY>
<PRE>
<FONT COLOR="red">/*====================================================================
 * os_pfs.h
 *
 * Copyright 1995, Silicon Graphics, Inc.
 * All Rights Reserved.
 *
 * This is UNPUBLISHED PROPRIETARY SOURCE CODE of Silicon Graphics,
 * Inc.; the contents of this file may not be disclosed to third
 * parties, copied or duplicated in any form, in whole or in part,
 * without the prior written permission of Silicon Graphics, Inc.
 *
 * RESTRICTED RIGHTS LEGEND:
 * Use, duplication or disclosure by the Government is subject to
 * restrictions as set forth in subdivision (c)(1)(ii) of the Rights
 * in Technical Data and Computer Software clause at DFARS
 * 252.227-7013, and/or in similar or successor clauses in the FAR,
 * DOD or NASA FAR Supplement. Unpublished - rights reserved under the
 * Copyright Laws of the United States.
 *====================================================================*/</FONT>

<FONT COLOR="red">/*---------------------------------------------------------------------*
        Copyright (C) 1998 Nintendo. (Originated by SGI)
        
        $RCSfile: os_pfs.h,v $
        $Revision: 1.1 $
        $Date: 1998/10/09 08:01:16 $
 *---------------------------------------------------------------------*/</FONT>

#ifndef _OS_PFS_H_
#define	_OS_PFS_H_

#ifdef _LANGUAGE_C_PLUS_PLUS
extern &quot;C&quot; {
#endif

#include &lt;PR/ultratypes.h&gt;
#include &quot;os_message.h&quot;


#if defined(_LANGUAGE_C) || defined(_LANGUAGE_C_PLUS_PLUS)

<FONT COLOR="red">/**************************************************************************
 *
 * Type definitions
 *
 */</FONT>

<FONT COLOR="red">/*
 * Structure for file system
 */</FONT>
typedef struct {
	int		status;
	OSMesgQueue 	*queue;
	int		channel;
	u8		id[32];
	u8		label[32];
	int		version;
	int		dir_size;
	int		inode_table;		<FONT COLOR="red">/* block location */</FONT>
	int		minode_table;		<FONT COLOR="red">/* mirrioring inode_table */</FONT>
	int		dir_table;		<FONT COLOR="red">/* block location */</FONT>
	int		inode_start_page;	<FONT COLOR="red">/* page # */</FONT>
	u8		banks;
	u8		activebank;
} OSPfs;

typedef struct {
	u32	file_size;	<FONT COLOR="red">/* bytes */</FONT>
  	u32 	game_code;
  	u16 	company_code;
  	char  	ext_name[4];
  	char 	game_name[16];
} OSPfsState;


#endif <FONT COLOR="red">/* defined(_LANGUAGE_C) || defined(_LANGUAGE_C_PLUS_PLUS) */</FONT>

<FONT COLOR="red">/**************************************************************************
 *
 * Global definitions
 *
 */</FONT>

<FONT COLOR="red">/* File System size */</FONT>
#define	OS_PFS_VERSION		0x0200
#define	OS_PFS_VERSION_HI	(OS_PFS_VERSION &gt;&gt; 8)
#define	OS_PFS_VERSION_LO	(OS_PFS_VERSION &amp; 255)

#define PFS_FILE_NAME_LEN       16
#define PFS_FILE_EXT_LEN        4
#define BLOCKSIZE		32		<FONT COLOR="red">/* bytes */</FONT>
#define PFS_ONE_PAGE            8		<FONT COLOR="red">/* blocks */</FONT>
#define PFS_MAX_BANKS		62

<FONT COLOR="red">/* File System flag */</FONT>

#define PFS_READ                0
#define PFS_WRITE               1
#define PFS_CREATE              2

<FONT COLOR="red">/* File System status */</FONT>
#define PFS_INITIALIZED		0x1
#define PFS_CORRUPTED		0x2		<FONT COLOR="red">/* File system was corrupted */</FONT>
#define PFS_ID_BROKEN		0x4
#define PFS_MOTOR_INITIALIZED	0x8
#define	PFS_GBPAK_INITIALIZED	0x10

<FONT COLOR="red">/* File System error number */</FONT>

#define PFS_ERR_NOPACK		1	<FONT COLOR="red">/* no memory card is plugged or   */</FONT>
#define PFS_ERR_NEW_PACK        2	<FONT COLOR="red">/* ram pack has been changed to a */</FONT>
					<FONT COLOR="red">/* different one 		  */</FONT>
#define PFS_ERR_INCONSISTENT    3	<FONT COLOR="red">/* need to run Pfschecker 	  */</FONT>
#define PFS_ERR_CONTRFAIL	CONT_OVERRUN_ERROR              
#define PFS_ERR_INVALID         5	<FONT COLOR="red">/* invalid parameter or file not exist*/</FONT>
#define PFS_ERR_BAD_DATA        6       <FONT COLOR="red">/* the data read from pack are bad*/</FONT>
#define PFS_DATA_FULL           7	<FONT COLOR="red">/* no free pages on ram pack      */</FONT>
#define PFS_DIR_FULL            8	<FONT COLOR="red">/* no free directories on ram pack*/</FONT>
#define PFS_ERR_EXIST		9	<FONT COLOR="red">/* file exists 			  */</FONT>
#define PFS_ERR_ID_FATAL	10	<FONT COLOR="red">/* dead ram pack */</FONT>
#define PFS_ERR_DEVICE		11	<FONT COLOR="red">/* wrong device type*/</FONT>
#define PFS_ERR_NO_GBCART	12 	<FONT COLOR="red">/* no gb cartridge (64GB-PAK) */</FONT>
#define PFS_ERR_NEW_GBCART	13 	<FONT COLOR="red">/* gb cartridge may be changed */</FONT>


#if defined(_LANGUAGE_C) || defined(_LANGUAGE_C_PLUS_PLUS)

<FONT COLOR="red">/**************************************************************************
 *
 * Macro definitions
 *
 */</FONT>


<FONT COLOR="red">/**************************************************************************
 *
 * Extern variables
 *
 */</FONT>


<FONT COLOR="red">/**************************************************************************
 *
 * Function prototypes
 *
 */</FONT>

<FONT COLOR="red">/* file system interface */</FONT>

extern s32 osPfsInitPak(OSMesgQueue *, OSPfs *, int);
extern s32 osPfsRepairId(OSPfs *);
extern s32 osPfsInit(OSMesgQueue *, OSPfs *, int);
extern s32 osPfsReFormat(OSPfs *, OSMesgQueue *, int);
extern s32 osPfsChecker(OSPfs *);
extern s32 osPfsAllocateFile(OSPfs *, u16, u32, u8 *, u8 *, int, s32 *);
extern s32 osPfsFindFile(OSPfs *, u16, u32, u8 *, u8 *, s32 *);
extern s32 osPfsDeleteFile(OSPfs *, u16, u32, u8 *, u8 *);
extern s32 osPfsReadWriteFile(OSPfs *, s32, u8, int, int, u8 *);
extern s32 osPfsFileState(OSPfs *, s32, OSPfsState *);
extern s32 osPfsGetLabel(OSPfs *, u8 *, int *);
extern s32 osPfsSetLabel(OSPfs *, u8 *);
extern s32 osPfsIsPlug(OSMesgQueue *, u8 *);
extern s32 osPfsFreeBlocks(OSPfs *, s32 *);
extern s32 osPfsNumFiles(OSPfs *, s32 *, s32 *);


#endif  <FONT COLOR="red">/* defined(_LANGUAGE_C) || defined(_LANGUAGE_C_PLUS_PLUS) */</FONT>

#ifdef _LANGUAGE_C_PLUS_PLUS
}
#endif

#endif <FONT COLOR="red">/* !_OS_PFS_H_ */</FONT>
</PRE>
</BODY>
