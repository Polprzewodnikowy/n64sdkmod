<!DOCTYPE HTML PUBLIC "-//IBM//DTD HPB HTML//EN">
<HTML>
<HEAD>
<LINK REL=STYLESHEET TYPE="text/css" HREF="../N64man.css">
<Editor's Notes: JLR made reformating and copy edits.>
<TITLE>guPosition</TITLE>
</HEAD>

<BODY bgcolor="#ffffff">

<H1>guPosition<FONT size="+0"> [Function]</FONT></H1>

<p><h3>Function</h3></p>

<p>guPosition</p>
<P>
<i>Creates a rotation/parallel translation modeling matrix (fixed point)</i>
</P>
<H3>Syntax</H3>
<p>
<PRE><CODE>#include &lt;ultra64.h&gt;        /* <A HREF="../../header/gu.htm">gu.h</A> */
void guPosition(
        Mtx *m,
        float r,
        float p,
        float h,
        float s,
        float x,
        float y,
        float z);</CODE></PRE></p>

<H3>Arguments</H3>
<p><DL>
  <DT><B>m</B>
  <DD>Pointer to the resulting matrix
  <DT><B>r</B>
  <DD>Angle of rotation of roll (in degrees, x-axis)
  <DT><B>p</B>
  <DD>Angle of rotation of pitch (in degrees, y-axis)
  <DT><B>h</B>
  <DD>Angle of rotation of heading, or yaw (in degrees, z-axis)
  <DT><B>s</B>
  <DD>Scale
  <DT><B>x</B>
  <DD>Amount of translation along x-axis
  <DT><B>y</B>
  <DD>Amount of translation along y-axis 
  <DT><B>z</B>
  <DD>Amount of translation along z-axis
</DL></p>

<H3>Returned value</H3>
<P>
None
</P>
<H3>Description</H3>
<P>
Scales by <B>s</B> the object rotated according to (<B>r</B>, <B>p</B>, <B>h</B>) and returns the modeling matrix translated by (<B>x</B>, <B>y</B>, <B>z</B>) to the structure indicated by <B>m</B>.  When this function is called, the result is the creation of the following kind of modeling matrix:
</P>
<P>
<NOBR><IMG SRC="guPosition00.gif"></NOBR>
</P>
<P>
For details about the fixed-point format, see <A HREF="../gsp/gSPMatrix.htm">gSPMatrix</A>.  Floating point is handled with the <A HREF="guPositionF.htm">guPositionF</A> function.
</P>
<H3>Note</H3>
<P>
An angle with a positive value represents counter-clockwise rotation.  Be careful about the corresponding axis and the order of rotation.
</P>
<H3>Comment</H3>
<P>
The Mtx structure looks like this:
<PRE><CODE>typedef long  Mtx_t[4][4];
typedef union {
     Mtx_t          m;
     long long int  force_structure_alignment;
} Mtx;
</CODE></PRE>
</P>
<H3>See also</H3>
<P>
<A HREF="../gsp/gSPMatrix.htm">gSPMatrix</A>, <A HREF="guAlign.htm">guAlign</A>, <A HREF="guAlignF.htm">guAlignF</A>, <A HREF="guPositionF.htm">guPositionF</A>, <A HREF="guRotate.htm">guRotate</A>, <A HREF="guRotateF.htm">guRotateF</A>, <A HREF="guScale.htm">guScale</A>, <A HREF="guScaleF.htm">guScaleF</A>, <A HREF="guTranslate.htm">guTranslate</A>, and <A HREF="guTranslateF.htm">guTranslateF</A>
</P>
<H3>Revision history</H3>
<P>
03/01/99  Completely rewritten.
</P>
</BODY>
</HTML>
