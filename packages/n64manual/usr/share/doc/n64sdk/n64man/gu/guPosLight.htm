<!DOCTYPE HTML PUBLIC "-//IBM//DTD HPB HTML//EN">
<HTML>
<HEAD>
<LINK REL=STYLESHEET TYPE="text/css" HREF="../N64man.css">
<Editor's Notes: JLR made reformating and copy edits.>
<TITLE>guPosLight</TITLE>
</HEAD>

<BODY bgcolor="#ffffff">

<H1>guPosLight<FONT size="+0"> [Function]</FONT></H1>

<p><h3>Function</h3></p>

<p>guPosLight</p>
<P>
<i>Creates a Light structure for a positional light</i>
</P>
<H3>Syntax</H3>
<p>
<PRE><CODE>#include &lt;ultra64.h&gt;        /* <A HREF="../../header/gu.htm">gu.h</A> */
void guPosLight(
        PositionalLight *pl,
        Light *l,
        float xOb,
        float yOb,
        float zOb);</CODE></PRE></p>

<H3>Arguments</H3>
<p><DL>
  <DT><B>pl</B>
  <DD>Pointer to PositionalLight structure
  <DT><B>l</B>
  <DD>Pointer to the resulting Light structure
  <DT><B>xOb</B>
  <DD>x-coordinate in center of object to be lit (absolute coordinate)
  <DT><B>yOb</B>
  <DD>y-coordinate in center of object to be lit (absolute coordinate)
  <DT><B>zOb</B>
  <DD>z-coordinate in center of object to be lit (absolute coordinate)
</DL></p>

<H3>Returned value</H3>
<P>
None
</P>
<H3>Description</H3>
<P>
Gets the PositionalLight structure (the parameters of which have been set by the user), and returns it to the Light structure indicated by <B>l</B>. The light direction and intensity are determined by the positional relationship (distance and direction) between the light and the object being lit.
</P>
<P>
This function returns a Light structure for one positional light, and does not calculate the value for a specular highlight.  Use the <A HREF="guPosLightHilite.htm">guPosLightHilite</A> to return Light structures for two positional lights and to return the Hilite structure and the LookAt structure for the rendering of specular highlights.
</P>
<H3>Note</H3>
<P>
Use this function to create the effect of an attenuating positional light.  The function works well with small lighted objects (especially moving objects), but not with large objects (like terrain and walls).  If there are numerous small moving objects, call this function for every moving object and use a separate Light structure for each.
</P>
<H3>Comment</H3>
<P>
The PositionalLight structure looks like this:
<PRE><CODE>typedef struct {
     float  col[3];         /* Color (and intensity) */
     float  pos[3];         /* Position (absolute coordinates)*/
     float  a1, a2;         /* Attenuation rate */
     /* Actual color = col/(a1* distance + a2) */
} PositionalLight;
</CODE></PRE>
The Light structure looks like this:
<PRE><CODE>typedef struct {
     unsigned char  col[3]; /* Diffuse light value (RGBA) */
     char           pad1;
     unsigned char  colc[3]; /* Copy of diffuse light (RGBA) */
     char           pad2;
     signed char    dir[3]; /* Direction toward light source (normalized) */
     char           pad3;   /* IMPORTANT: dir must be less than 127 */
} Light_t;
typedef union {
     Light_t        l;
     long long int  force_structure_alignment[2];
} Light;
</CODE></PRE>
</P>
<H3>See also</H3>
<P>
<A HREF="../gdsp/gdSPDefLights.htm">gdSPDefLights</A>, <A HREF="../gsp/gSPLightColor.htm">gSPLightColor</A>, <A HREF="../gsp/gSPNumLights.htm">gSPNumLights</A>, <A HREF="../gsp/gSPSetLightsM.htm">gSPSetLights<I>M</I></A>, and <A HREF="guPosLightHilite.htm">guPosLightHilite</A>
</P>
<H3>Revision history</H3>
<P>
03/01/99  Completely revised.
</P>
</BODY>
</HTML>
