<!DOCTYPE HTML PUBLIC "-//IBM//DTD HPB HTML//EN">
<HTML>
<HEAD>
<LINK REL=STYLESHEET TYPE="text/css" HREF="../N64man.css">
<Editor's Notes: JLR made reformating and copy edits.>
<TITLE>guPosLightHilite</TITLE>
</HEAD>

<BODY bgcolor="#ffffff">

<H1>guPosLightHilite<FONT size="+0"> [Function]</FONT></H1>

<p><h3>Function</h3></p>

<p>guPosLightHilite</p>
<P>
<i>Creates Light structures for positional lights and also sets the LookAt/Hilite structures</i>
</P>
<H3>Syntax</H3>
<p>
<PRE><CODE>#include &lt;ultra64.h&gt;        /* <A HREF="../../header/gu.htm">gu.h</A> */
void guPosLightHilite(
        PositionalLight *pl1,
        PositionalLight *pl2,
        Light *l1,
        Light *l2,
        LookAt *l,
        Hilite *h,
        float xEye,
        float yEye,
        float zEye,
        float xOb,
        float yOb,
        float zOb,
        float xUp,
        float yUp,
        float zUp,
        int twidth,
        int theight);</CODE></PRE></p>

<H3>Arguments</H3>
<p><DL>
  <DT><B>pl1</B>
  <DD>Pointer to first PositionalLight structure
  <DT><B>pl2</B>
  <DD>Pointer to second PositionalLight structure
  <DT><B>l1</B>
  <DD>Pointer to first Light structure resulting from calculation
  <DT><B>l2</B>
  <DD>Pointer to second Light structure resulting from calculation
  <DT><B>l</B>
  <DD>Pointer to LookAt structure resulting from calculation
  <DT><B>h</B>
  <DD>Pointer to Hilite structure resulting from calculation
  <DT><B>xEye</B>
  <DD>x-coordinate of viewpoint
  <DT><B>yEye</B>
  <DD>y-coordinate of viewpoint
  <DT><B>zEye</B>
  <DD>z-coordinate of viewpoint
  <DT><B>xOb</B>
  <DD>x-coordinate in center of object to be lit (absolute coordinate)
  <DT><B>yOb</B>
  <DD>y-coordinate in center of object to be lit (absolute coordinate)
  <DT><B>zOb</B>
  <DD>z-coordinate in center of object to be lit (absolute coordinate)
  <DT><B>xUp</B>
  <DD>x component of upward vector
  <DT><B>yUp</B>
  <DD>y component of upward vector
  <DT><B>zUp</B>
  <DD>z component of upward vector
  <DT><B>twidth</B>
  <DD>Width of texture for specular highlight
  <DT><B>theight</B>
  <DD>Height of texture for specular highlight
</DL></p>

<H3>Returned value</H3>
<P>
None
</P>
<H3>Description</H3>
<P>
Gets the PositionalLight structures (the parameters of which have been set by the user), and returns them to the Light structures indicated by <B>l1</B>, <B>l2</B>.  The light direction and intensity are determined by the positional relationship (distance and direction) between the light and the object being lit.
</P>
<P>
This function returns Light structures for two positional lights, and sets the x,y screen coordinate directions in the LookAt structure in order to render specular highlights.  It also sets the texture offsets used for the rendering of two specular highlights in the Hilite structure.  To return a Light structure for just one positional light without calculating values for specular highlights, you can use the <A HREF="guPosLight.htm">guPosLight</A> function.
</P>
<P>
To learn more about specular highlighting, see Section 11.7.4 "Specular Highlights" in the N64 Programming Manual.
</P>
<H3>Note</H3>
<P>
Use this function to create the effect of attenuating positional lights.  The function works well with small lighted objects (especially moving objects), but not with large objects (like terrain and walls).  If there are numerous small moving objects, call this function for every moving object and use a separate Light structure for each.  Note that both <B>twidth</B> and <B>theight</B> must be powers of 2.
</P>
<H3>Comment</H3>
<P>
The PositionalLight structure looks like this:
<PRE><CODE>typedef struct {
     float  col[3];         /* Color (and intensity) */
     float  pos[3];         /* Position (absolute coordinates)*/
     float  a1, a2;         /* Attenuation rate */
     /* Actual color = col/(a1* distance + a2) */
} PositionalLight;
</CODE></PRE>
The Light structure looks like this:
<PRE><CODE>typedef struct {
     unsigned char  col[3]; /* Diffuse light value (RGBA) */
     char           pad1;
     unsigned char  colc[3]; /* Copy of diffuse light (RGBA) */
     char           pad2;
     signed char    dir[3]; /* Direction toward light source (normalized) */
     char           pad3;   /* IMPORTANT: dir must be less than 127 */
} Light_t;
typedef union {
     Light_t        l;
     long long int  force_structure_alignment[2];
} Light;
</CODE></PRE>
</P>
<P>
The LookAt structure looks like this:
<PRE><CODE>typedef struct {
     Light  l[2];
} LookAt;
</CODE></PRE>
* Note that here the Light structure is not utilized in the normal way: l[0].dir is for the x,y,z components of the viewing space in the x direction of the screen space, while l[1].dir is for the x,y,z components of the viewing space in the y direction of the screen space.
</P>
<P>
The Hilite structure looks like this:
<PRE><CODE>typedef struct {
     int       x1, y1, x2, y2; /* Texture offsets for highlight */
} Hilite_t;
typedef union {
     Hilite_t  h;
     long int  force_structure_alignment[4];
} Hilite;
</CODE></PRE>
</P>
<H3>See also</H3>
<P>
<A HREF="../gdsp/gdSPDefLights.htm">gdSPDefLights</A>, <A HREF="../gsp/gSPLightColor.htm">gSPLightColor</A>, <A HREF="../gsp/gSPNumLights.htm">gSPNumLights</A>, <A HREF="../gsp/gSPSetLightsM.htm">gSPSetLights<I>M</I></A>, <A HREF="guLookAtHilite.htm">guLookAtHilite</A>, and <A HREF="guPosLight.htm">guPosLight</A>
</P>
<H3>Revision history</H3>
<P>
03/01/99  Completely rewritten.
</P>
</BODY>
</HTML>
