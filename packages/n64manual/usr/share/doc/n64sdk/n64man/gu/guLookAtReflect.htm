<!DOCTYPE HTML PUBLIC "-//IBM//DTD HPB HTML//EN">
<HTML>
<HEAD>
<LINK REL=STYLESHEET TYPE="text/css" HREF="../N64man.css">
<Editor's Notes: JLR made reformating and copy edits.>
<TITLE>guLookAtReflect</TITLE>
</HEAD>

<BODY bgcolor="#ffffff">

<H1>guLookAtReflect <FONT size="+0"> [Function]</FONT></H1>


<p><h3>Function</h3></p>

<p>guLookAtReflect</p>
<P>
<i>Creates the viewing matrix (fixed point) and sets the LookAt structure</i>
</P>
<H3>Syntax</H3>
<p>
<PRE><CODE>#include &lt;ultra64.h&gt;        /* <A HREF="../../header/gu.htm">gu.h</A> */
void guLookAtReflect(
        Mtx *m,
        LookAt *l,
        float xEye,
        float yEye,
        float zEye,
        float xAt,
        float yAt,
        float zAt,
        float xUp,
        float yUp,
        float zUp);</CODE></PRE></p>

<H3>Arguments</H3>
<p><DL>
  <DT><B>m</B>
  <DD>Pointer to matrix resulting from calculation
  <DT><B>l</B>
  <DD>Pointer to LookAt structure resulting from calculation
  <DT><B>xEye</B>
  <DD>x-coordinate of viewpoint
  <DT><B>yEye</B>
  <DD>y-coordinate of viewpoint
  <DT><B>zEye</B>
  <DD>z-coordinate of viewpoint
  <DT><B>xAt</B>
  <DD>x-coordinate of lookat point
  <DT><B>yAt</B>
  <DD>y-coordinate of lookat point
  <DT><B>zAt</B>
  <DD>z-coordinate of lookat point
  <DT><B>xUp</B>
  <DD>x component of upward vector
  <DT><B>yUp</B>
  <DD>y component of upward vector
  <DT><B>zUp</B>
  <DD>z component of upward vector
</DL></p>
<H3>Returned value</H3>
<P>
None
</P>
<H3>Description</H3>
<P>
This function returns a viewing matrix to the structure indicated by <B>m</B>.  It also sets the x,y screen coordinate directions in the LookAt structure for reflection mapping.  For a detailed explanation about the fixed point format, see <A HREF="../gsp/gSPMatrix.htm">gSPMatrix</A>.  Floating point is handled with the <A HREF="guLookAtReflectF.htm">guLookAtReflectF</A> function.
</P>
<P>
Use <A HREF="../gsp/gSPLookAt.htm">gSPLookAt</A> to set the texture settings (LookAt structure) for reflection mapping.
</P>
<P>
For details, see Section 11.7.5 "Reflection Mapping" in the N64 Programming Manual.
</P>
<H3>Note</H3>
<P>
The Mtx structure looks like this:
<PRE><CODE>typedef long  Mtx_t[4][4];
typedef union {
     Mtx_t          m;
     long long int  force_structure_alignment;
} Mtx;
</CODE></PRE>
</P>
<P>
The LookAt structure looks like this:
<PRE><CODE>typedef  struct {
     unsigned char  col[3]; /* Diffuse light value (RGBA) */
     char           pad1;
     unsigned char  colc[3]; /* Copy of diffuse light value (RGBA)*/
     char           pad2;
     signed char    dir[3]; /* Direction toward light source (normalized) */
     char           pad3;   /* IMPORTANT: dir must be smaller than 127 */
} Light_t;
typedef union {
     Light_t        l;
     long long int  force_structure_alignment[2];
} Light;
typedef struct {
     Light          l[2];
} LookAt;
</CODE></PRE>
* Note that here the Light structure is not utilized in the normal way: l[0].dir is for the x,y,z components of the viewing space in the x direction of the screen space, while l[1].dir is for the x,y,z components of the viewing space in the y direction of the screen space.
</P>
<H3>See also</H3>
<P>
<A HREF="../gsp/gSPLookAt.htm">gSPLookAt</A>, <A HREF="../gsp/gSPMatrix.htm">gSPMatrix</A>, <A HREF="guLookAt.htm">guLookAt</A>, <A HREF="guLookAtF.htm">guLookAtF</A>, <A HREF="guLookAtHilite.htm">guLookAtHilite</A>, <A HREF="guLookAtHiliteF.htm">guLookAtHiliteF</A>, and <A HREF="guLookAtReflectF.htm">guLookAtReflectF</A>
</P>
<H3>Revision history</H3>
<P>
03/01/99  Completely rewritten.
</P>
</BODY>
</HTML>
