<!DOCTYPE HTML PUBLIC "-//IBM//DTD HPB HTML//EN">
<HTML>
<HEAD>
<LINK REL=STYLESHEET TYPE="text/css" HREF="../N64man.css">
<Editor's Notes: JLR made reformating and copy edits.>
<TITLE>Index for os Functions</TITLE>
</HEAD>

<BODY bgcolor="#FFFFFF">

<H1>Index for os Functions</H1>
<TABLE border="0" cellspacing="0">
  <TR>
    
    <TD><FONT size="2"><STRONG>[</STRONG></FONT><A href="#osAi"><FONT size="2"><STRONG>osAi</STRONG></FONT></A><FONT size="2"><STRONG>]
[</STRONG></FONT><A href="#osCont"><FONT size="2"><STRONG>osCont</STRONG></FONT></A><FONT size="2"><STRONG>]
[</STRONG></FONT><A href="#osEeprom"><FONT size="2"><STRONG>osEeprom</STRONG></FONT></A><FONT size="2"><STRONG>]
[</STRONG></FONT><A href="#osEpi"><FONT size="2"><STRONG>osEpi</STRONG></FONT></A><FONT size="2"><STRONG>]
[</STRONG></FONT><A href="#osGbpak"><FONT size="2"><STRONG>osGbpak</STRONG></FONT></A><FONT size="2"><STRONG>]
[</STRONG></FONT><A href="#osGet"><FONT size="2"><STRONG>osGet</STRONG></FONT></A><FONT size="2"><STRONG>]<BR>
[</STRONG></FONT><A href="#osMotor"><FONT size="2"><STRONG>osMotor</STRONG></FONT></A><FONT size="2"><STRONG>]
[</STRONG></FONT><A href="#osPfs"><FONT size="2"><STRONG>osPfs</STRONG></FONT></A><FONT size="2"><STRONG>]
[</STRONG></FONT><A href="#osPi"><FONT size="2"><STRONG>osPi</STRONG></FONT></A><FONT size="2"><STRONG>]
[</STRONG></FONT><A href="#osSet"><FONT size="2"><STRONG>osSet</STRONG></FONT></A><FONT size="2"><STRONG>]
[</STRONG></FONT><A href="#osVi"><FONT size="2"><STRONG>osVi</STRONG></FONT></A><FONT size="2"><STRONG>]</STRONG>
</FONT><FONT size="2"><STRONG>[</STRONG></FONT><A href="#osVoice"><FONT size="2"><STRONG>osVoice</STRONG></FONT></A><FONT size="2"><STRONG>]</STRONG>
<B>[<A href="#deleted">Functions removed</A>]</B></FONT></TD></TR>
</TABLE>

<TABLE border="1" cellspacing="1">
  <TR>
    <TD width="210"><A href="OS_CYCLES_TO_NSEC.htm"><STRONG>OS_CYCLES_TO_NSEC</STRONG></A></TD>
    <TD width="500"><FONT size="2">Converts from CPU Count register cycles to nanoseconds
</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="OS_CYCLES_TO_USEC.htm"><STRONG>OS_CYCLES_TO_USEC</STRONG></A></TD>
    <TD width="500"><FONT size="2">Converts from CPU Count register cycles to microseconds</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="OS_DCACHE_ROUNDUP_ADDR.htm"><STRONG>OS_DCACHE_ROUNDUP_ADDR</STRONG></A></TD>
    <TD width="500"><FONT size="2">Rounds up the address value to the physical address, to match the data cache line size </FONT></TD></TR>
  <TR>
    <TD width="210"><A href="OS_DCACHE_ROUNDUP_SIZE.htm"><STRONG>OS_DCACHE_ROUNDUP_SIZE</STRONG></A></TD>
    <TD width="500"><FONT size="2">Rounds up the address value to the size value, to match the data cache line size</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="OS_K0_TO_PHYSICAL.htm"><STRONG>OS_K0_TO_PHYSICAL</STRONG></A></TD>
    <TD width="500"><FONT size="2">Translates from a cached, direct-mapped CPU address (KSEG0) to a physical address</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="OS_K1_TO_PHYSICAL.htm"><STRONG>OS_K1_TO_PHYSICAL</STRONG></A></TD>
    <TD width="500"><FONT size="2">Converts from the CPU virtual address KSEG1 (cache disabled, no TLB mapping) to the physical address.</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="OS_NSEC_TO_CYCLES.htm"><STRONG>OS_NSEC_TO_CYCLES</STRONG></A></TD>
    <TD width="500"><FONT size="2">Converts from nanoseconds to CPU Count register cycles</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="OS_PHYSICAL_TO_K0.htm"><STRONG>OS_PHYSICAL_TO_K0</STRONG></A></TD>
    <TD width="500"><FONT size="2">Convert from the physical address to a direct mapped CPU virtual address with cache enabled
</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="OS_PHYSICAL_TO_K1.htm"><STRONG>OS_PHYSICAL_TO_K1</STRONG></A></TD>
    <TD width="500"><FONT size="2">Translates from a physical address to an uncached, direct-mapped CPU address</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="OS_USEC_TO_CYCLES.htm"><STRONG>OS_USEC_TO_CYCLES</STRONG></A></TD>
    <TD width="500"><FONT size="2">Converts from microseconds to CPU Count register cycles
</FONT></TD></TR>
  <TR>
    <TD><A href="osAfterPreNMI.htm"><STRONG>osAfterPreNMI</STRONG></A></TD>
    <TD><FONT size="2">Initializes the RSP's program counter (PC)</FONT></TD></TR>
  <TR>
    <TD width="210"><A name="osAi" href="osAiGetLength.htm"><STRONG>osAiGetLength</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns the number of bytes remaining in the current DMA buffer</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osAiGetStatus.htm"><STRONG>osAiGetStatus</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns the hardware status of the audio interface</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osAiSetFrequency.htm"><STRONG>osAiSetFrequency</STRONG></A></TD>
    <TD width="500"><FONT size="2">Calculates the correct values for the internal divisors and returns the actual frequency</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osAiSetNextBuffer.htm"><STRONG>osAiSetNextBuffer</STRONG></A></TD>
    <TD width="500"><FONT size="2">Sets up the next DMA transfer from RDRAM to the AI buffer</FONT></TD></TR>
  <TR>
    <TD><B><A href="osAppNMIBuffer.htm">osAppNMIBuffer</A></B></TD>
    <TD><FONT size="-1" color="#000000">64-byte buffer cleared by a cold reset</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osCartRomInit.htm"><STRONG>osCartRomInit</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns information regarding the hardware settings necessary when using a cartridge.</FONT></TD></TR>
  <TR>
    <TD width="210"><A name="osCont" href="osContGetQuery.htm"><STRONG>osContGetQuery</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns Controller's status and type</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osContGetReadData.htm"><STRONG>osContGetReadData</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns the status of the 3D control stick and buttons to the pad in OSContPad structure</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osContInit.htm"><STRONG>osContInit</STRONG></A></TD>
    <TD width="500"><FONT size="2">Initializes the game Controller</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osContReset.htm"><STRONG>osContReset</STRONG></A></TD>
    <TD width="500"><FONT size="2">Resets all game Controllers</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osContSetCh.htm"><STRONG>osContSetCh</STRONG></A></TD>
    <TD width="500"><FONT size="2">Specifies the number of controllers that will be read into the system</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osContStartQuery.htm"><STRONG>osContStartQuery</STRONG></A></TD>
    <TD width="500"><FONT size="2">Issues a query command to SI device</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osContStartReadData.htm"><STRONG>osContStartReadData</STRONG></A></TD>
    <TD width="500"><FONT size="2">Generates a read command to get the status of the controllers</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osCreateLog.htm"><STRONG>osCreateLog</STRONG></A></TD>
    <TD width="500"><FONT size="2">Initializes the OSLog data structure</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osCreateMesgQueue.htm"><STRONG>osCreateMesgQueue</STRONG></A></TD>
    <TD width="500"><FONT size="2">Initializes a given OSMesgQueue structured message queue to an empty state</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osCreatePiManager.htm"><STRONG>osCreatePiManager</STRONG></A></TD>
    <TD width="500"><FONT size="2">Creates and starts the PI Manager system thread to provide mutual exclusion and synchronization support for the PI devices</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osCreateRegion.htm"><STRONG>osCreateRegion</STRONG></A></TD>
    <TD width="500"><FONT size="2">Creates a region from the contiguous memory area starting from the address in startAddress and continuing for the number of bytes in length</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osCreateScheduler.htm"><STRONG>osCreateScheduler</STRONG></A></TD>
    <TD width="500"><FONT size="2">Creates an RCP task scheduler</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osCreateThread.htm"><STRONG>osCreateThread</STRONG></A></TD>
    <TD width="500"><FONT size="2">Registers a schedulable object</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osCreateViManager.htm"><STRONG>osCreateViManager</STRONG></A></TD>
    <TD width="500"><FONT size="2">Specifies the VI manager</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osDestroyThread.htm"><STRONG>osDestroyThread</STRONG></A></TD>
    <TD width="500"><FONT size="2">Deletes a schedulable object</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osDpGetCounters.htm"><STRONG>osDpGetCounters</STRONG></A></TD>
    <TD width="500"><FONT size="2">Get internal performance counters from the display processor</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osDpGetStatus.htm"><STRONG>osDpGetStatus</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns the hardware status of the display processor command status register</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osDpSetNextBuffer.htm"><STRONG>osDpSetNextBuffer</STRONG></A></TD>
    <TD width="500"><FONT size="2">Updates the display processor pointers causing the display processor to begin reading an RDP display list</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osDpSetStatus.htm"><STRONG>osDpSetStatus</STRONG></A></TD>
    <TD width="500"><FONT size="2">Updates the display processor command status register with status</FONT></TD></TR>
  <TR>
    <TD width="210"><A name="osEeprom" href="osEepromLongRead.htm"><STRONG>osEepromLongRead</STRONG></A></TD>
    <TD width="500"><FONT size="2">Reads multiple blocks of data from EEPROM</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osEepromLongWrite.htm"><STRONG>osEepromLongWrite</STRONG></A></TD>
    <TD width="500"><FONT size="2">Writes multiple blocks of data to EEPROM</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osEepromProbe.htm"><STRONG>osEepromProbe</STRONG></A></TD>
    <TD width="500"><FONT size="2">Confirms that EEPROM is installed</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osEepromRead.htm"><STRONG>osEepromRead</STRONG></A></TD>
    <TD width="500"><FONT size="2">Reads data from EEPROM</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osEepromWrite.htm"><STRONG>osEepromWrite</STRONG></A></TD>
    <TD width="500"><FONT size="2">Writes data to EEPROM</FONT></TD></TR>
  <TR>
    <TD width="210"><A name="osEpi" href="osEPiGetDeviceType.htm"><STRONG>osEPiGetDeviceType</STRONG></A></TD>
    <TD width="500"><FONT size="2" color="#000000">Accesses EPI on low level (without using the PI manager)</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osEPiStartDma.htm"><STRONG>osEPiStartDma</STRONG></A></TD>
    <TD width="500"><FONT size="2">Sets up a DMA transfer between RDRAM and the PI device address space</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osEPiWriteIo.htm"><STRONG>osEPiWriteIo</STRONG></A></TD>
    <TD width="500"><FONT size="2" color="#000000">Expansion parallel interface (EPI) that uses the PI manager</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osEPiReadIo.htm"><STRONG>osEPiReadIo</STRONG></A></TD>
    <TD width="500"><FONT size="2" color="#000000">Expansion parallel interface (EPI) that uses the PI manager</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osEPiLinkHandle.htm"><STRONG>osEPiLinkHandle</STRONG></A></TD>
    <TD width="500"><FONT size="2">Sets a pointer to the next member when the EPI handler is set up</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osFlushLog.htm"><STRONG>osFlushLog</STRONG></A></TD>
    <TD width="500"><FONT size="2">Transfers the log data to the host which will print the log interpreted by the gload program</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osFree.htm"><STRONG>osFree</STRONG></A></TD>
    <TD width="500"><FONT size="2">After executing a buffer address check, it returns the buffer to the free list for the region
</FONT></TD></TR>
  <TR>
    <TD><A name="osGbpak" href="osGbpakCheckConnector.htm"><STRONG>osGbpakCheckConnector</STRONG></A></TD>
    <TD><FONT size="2">Checks the Game Boy game pak connector</FONT></TD></TR>
  <TR>
    <TD><A href="osGbpakGetStatus.htm"><STRONG>osGbpakGetStatus</STRONG></A></TD>
    <TD><FONT size="2">Detects the status of the N64 Game Boy Pak</FONT></TD></TR>
  <TR>
    <TD><A href="osGbpakInit.htm"><STRONG>osGbpakInit</STRONG></A></TD>
    <TD><FONT size="2">Initializes the N64 Game Boy Pak hardware and control structure pfs</FONT></TD></TR>
  <TR>
    <TD><A href="osGbpakPower.htm"><STRONG>osGbpakPower</STRONG></A></TD>
    <TD><FONT size="2">Turns power ON/OFF to the N64 Game Boy game pak</FONT></TD></TR>
  <TR>
    <TD><A href="osGbpakReadId.htm"><STRONG>osGbpakReadId</STRONG></A></TD>
    <TD><FONT size="2">Reads the Game Boy game pak registration area</FONT></TD></TR>
  <TR>
    <TD><A href="osGbpakReadWrite.htm"><STRONG>osGbpakReadWrite</STRONG></A> <b>[Update]</b>
    <TD><FONT size="2">Reads/writes to the memory of the Game Boy game pak using the N64 Game Boy Pak</FONT></TD></TR>
  <TR>
    <TD width="210"><A name="osGet" href="osGetCause.htm"><STRONG>osGetCause</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns the current value of the MIPS R4300 Cause register that describes the cause of the most recent exception</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osGetCompare.htm"><STRONG>osGetCompare</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns the current value of the R4300 Compare register</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osGetConfig.htm"><STRONG>osGetConfig</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns the current value of the R4300 Configuration register</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osGetCount.htm"><STRONG>osGetCount</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns the CPU Counter register</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osGetCurrFaultedThread.htm"><STRONG>osGetCurrFaultedThread</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns the most recent faulted thread or NULL</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osGetFpcCsr.htm"><STRONG>osGetFpcCsr</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns the current value of the R4300 floating-point control/status register</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osGetIntMask.htm"><STRONG>osGetIntMask</STRONG></A></TD>
    <TD width="500"><FONT size="2">Gets the enabled interrupt mask</FONT></TD></TR>
  <TR>
    <TD><A href="osGetMemSize.htm"><STRONG>osGetMemSize</STRONG></A></TD>
    <TD><FONT size="2" color="#000000">Checks the Memory Expansion Pak (for 64DD)</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osGetNextFaultedThread.htm"><STRONG>osGetNextFaultedThread</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns the next faulted thread from the active thread queue</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osGetRegionBufCount.htm"><STRONG>osGetRegionBufCount</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns the total number of buffers created for the region</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osGetRegionBufSize.htm"><STRONG>osGetRegionBufSize</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns the size (in bytes) allocated for each buffer in the region</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osGetSR.htm"><STRONG>osGetSR</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns the current value of the R4300 Status register</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osGetTLBASID.htm"><STRONG>osGetTLBASID</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns the current TLB Address Space ID in the R4300 EntryHi register</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osGetThreadId.htm"><STRONG>osGetThreadId</STRONG></A></TD>
    <TD width="500"><FONT size="2">Obtains the debugger identifier of a thread</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osGetThreadPri.htm"><STRONG>osGetThreadPri</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns the priority of the given thread</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osGetTime.htm"><STRONG>osGetTime</STRONG></A></TD>
    <TD width="500"><FONT size="2">Gets the real time counter value</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osInitialize.htm"><STRONG>osInitialize</STRONG></A></TD>
    <TD width="500"><FONT size="2">Performs hardware and software initialization procedures
</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osInitRdb.htm"><STRONG>osInitRdb</STRONG></A></TD>
    <TD width="500"><FONT size="2">Sets up an outgoing buffer for the rdb debug port
</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osInvalDCache.htm"><STRONG>osInvalDCache</STRONG></A></TD>
    <TD width="500"><FONT size="2">Invalidates CPU data cache lines</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osInvalICache.htm"><STRONG>osInvalICache</STRONG></A></TD>
    <TD width="500"><FONT size="2">Invalidates CPU instruction cache lines</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osJamMesg.htm"><STRONG>osJamMesg</STRONG></A></TD>
    <TD width="500"><FONT size="2">Creates a message with higher priority</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osLogEvent.htm"><STRONG>osLogEvent</STRONG></A></TD>
    <TD width="500"><FONT size="2">Adds an entry to the given log </FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osMalloc.htm"><STRONG>osMalloc</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns a pointer to the buffer in the region</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osMapTLB.htm"><STRONG>osMapTLB</STRONG></A></TD>
    <TD width="500"><FONT size="2">Sets the TLB entry index (ranges from 0 to 31)</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osMemSize.htm"><STRONG>osMemSize</STRONG></A></TD>
    <TD width="500"><FONT size="2">Holds the installed main memory (DRAM) size in bytes</FONT></TD></TR>
  <TR>
    <TD width="210"><A name="osMotor" href="osMotorInit.htm"><STRONG>osMotorInit</STRONG></A></TD>
    <TD width="500"><FONT size="2">Initializes the Rumble Pak</FONT></TD></TR>
  <TR>
    <TD><A href="osMotorStart.htm"><STRONG>osMotorStart</STRONG></A></TD>
    <TD><FONT size="2">Starts the Rumble Pak motor</FONT></TD></TR>
  <TR>
    <TD><A href="osMotorStop.htm"><STRONG>osMotorStop</STRONG></A></TD>
    <TD><FONT size="2">Stops the Rumble Pak motor</FONT></TD></TR>
  <TR>
    <TD width="210"><A name="osPfs" href="osPfsAllocateFile.htm"><STRONG>osPfsAllocateFile</STRONG></A></TD>
    <TD width="500"><FONT size="2">Creates a new game note </FONT></TD></TR>
  <TR>
    <TD><A href="osPfsChecker.htm"><STRONG>osPfsChecker</STRONG></A></TD>
    <TD><FONT size="2">Inspects and repairs the Controller Pak's file system</FONT></TD></TR>
  <TR>
    <TD><A href="osPfsDeleteFile.htm"><STRONG>osPfsDeleteFile</STRONG></A></TD>
    <TD><FONT size="2">Deletes a Controller Pak game note</FONT></TD></TR>
  <TR>
    <TD><A href="osPfsFileState.htm"><STRONG>osPfsFileState</STRONG></A></TD>
    <TD><FONT size="2">Obtains game note information</FONT></TD></TR>
  <TR>
    <TD><A href="osPfsFindFile.htm"><STRONG>osPfsFindFile</STRONG></A></TD>
    <TD><FONT size="2">Searches the specified game note </FONT></TD></TR>
  <TR>
    <TD><A href="osPfsFreeBlocks.htm"><STRONG>osPfsFreeBlocks</STRONG></A></TD>
    <TD><FONT size="2">Obtains the available number of bytes in a Controller Pak</FONT></TD></TR>
  <TR>
    <TD><A href="osPfsGetLabel.htm"><STRONG>osPfsGetLabel</STRONG></A></TD>
    <TD><FONT size="2">Reads the label of a Controller Pak</FONT></TD></TR>
  <TR>
    <TD><B>osPfsInit</B></TD>
    <TD><FONT size="-1">Removed (please use osPfsInitPak)</FONT></TD></TR>
  <TR>
    <TD><A href="osPfsInitPak.htm"><STRONG>osPfsInitPak</STRONG></A></TD>
    <TD><FONT size="2">Initializes the Controller Pak's file handle. </FONT></TD></TR>
  <TR>
    <TD><A href="osPfsIsPlug.htm"><STRONG>osPfsIsPlug</STRONG></A></TD>
    <TD><FONT size="2">Detects the Controller Pak inserted to a Controller
</FONT></TD></TR>
  <TR>
    <TD><A href="osPfsNumFiles.htm"><STRONG>osPfsNumFiles</STRONG></A></TD>
    <TD><FONT size="2">Acquires the maximum note number and the number of notes used</FONT></TD></TR>
  <TR>
    <TD><A href="osPfsRepairId.htm"><STRONG>osPfsRepairId</STRONG></A></TD>
    <TD><FONT size="2">Repairs the Controller Pak file system</FONT></TD></TR>
  <TR>
    <TD><A href="osPfsReadWriteFile.htm"><STRONG>osPfsReadWriteFile</STRONG></A></TD>
    <TD><FONT size="2">Reads/writes game note game data</FONT></TD></TR>
  <TR>
    <TD><A href="osPfsSetLabel.htm"><STRONG>osPfsSetLabel</STRONG></A></TD>
    <TD><FONT size="2" color="#000000">Writes to the Controller Pak label</FONT></TD></TR>
  <TR>
    <TD width="210"><A name="osPi" href="osPiGetCmdQueue.htm"><STRONG>osPiGetCmdQueue</STRONG></A></TD>
    <TD width="500"><FONT size="2">Returns the pointer to the PI manager's command queue, or NULL</FONT></TD></TR>
  <TR>
    <TD><A href="osPiGetStatus.htm"><STRONG>osPiGetStatus</STRONG></A></TD>
    <TD><FONT size="2">Returns the hardware status of the peripheral interface (PI)</FONT></TD></TR>
  <TR>
    <TD><A href="osPiReadIo.htm"><STRONG>osPiReadIo</STRONG></A></TD>
    <TD><FONT size="2">Performs a 32-bit programmed IO read from a specified PI device address devAddr
</FONT></TD></TR>
  <TR>
    <TD><A href="osPiStartDma.htm"><STRONG>osPiStartDma</STRONG></A></TD>
    <TD><FONT size="2">Sets up DMA transfer between RDRAM and PI device address space</FONT></TD></TR>
  <TR>
    <TD><A href="osPiWriteIo.htm"><STRONG>osPiWriteIo</STRONG></A></TD>
    <TD><FONT size="2">Performs a 32-bit programmed IO write from a specified PI device address devAddr</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osProfile.htm"><STRONG>osProfile</STRONG></A></TD>
    <TD width="500"><FONT size="2">Run time profile for text spaces without shared sources</FONT></TD></TR>
  <TR>
    <TD><A href="osProfileFlush.htm"><STRONG>osProfileFlush</STRONG></A></TD>
    <TD><FONT size="2">Programmatically transfers profile data to the gperf program</FONT></TD></TR>
  <TR>
    <TD><A href="osProfileInit.htm"><STRONG>osProfileInit</STRONG></A></TD>
    <TD><FONT size="2">Initializes the profiled segment count buffers</FONT></TD></TR>
  <TR>
    <TD><A href="osProfileStart.htm"><STRONG>osProfileStart</STRONG></A></TD>
    <TD><FONT size="2">Starts the profiler's interval counter</FONT></TD></TR>
  <TR>
    <TD><A href="osProfileStop.htm"><STRONG>osProfileStop</STRONG></A></TD>
    <TD><FONT size="2">Turns off profiling</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osReadHost.htm"><STRONG>osReadHost</STRONG></A></TD>
    <TD width="500"><FONT size="2">Sets up the connection on the side of the game that is receiving nbytes of data from the host</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osRecvMesg.htm"><STRONG>osRecvMesg</STRONG></A></TD>
    <TD width="500"><FONT size="2">Copies the first message in the message queue "mq" into a address specified by "msg"
</FONT></TD></TR>
  <TR>
    <TD width="210"><A href="osResetType.htm"><STRONG>osResetType</STRONG></A></TD>
    <TD width="500"><FONT size="2">Saves the cause of a system reboot</FONT></TD></TR>
  <TR>
    <TD><A href="osScAddClient.htm"><STRONG>osScAddClient</STRONG></A></TD>
    <TD><FONT size="2">Adds a client to the RCP task scheduler</FONT></TD></TR>
  <TR>
    <TD><A href="osScGetTaskQ.htm"><STRONG>osScGetTaskQ</STRONG></A></TD>
    <TD><FONT size="2">Gets the message queue used for communicating with the scheduler thread</FONT></TD></TR>
  <TR>
    <TD><A href="osScRemoveClient.htm"><STRONG>osScRemoveClient</STRONG></A></TD>
    <TD>&nbsp;</TD></TR>
  <TR>
    <TD><A href="osSendMesg.htm"><STRONG>osSendMesg</STRONG></A></TD>
    <TD><FONT size="2">Copies the message "msg" to the end of the given message queue "mq"
</FONT></TD></TR>
  <TR>
    <TD><A name="osSet" href="osSetCause.htm"><STRONG>osSetCause</STRONG></A></TD>
    <TD><FONT size="2">Sets the new value for the MIPS R4300 Cause register</FONT></TD></TR>
  <TR>
    <TD><A href="osSetCompare.htm"><STRONG>osSetCompare</STRONG></A></TD>
    <TD><FONT size="2">Sets the new value for the R4300 Compare register </FONT></TD></TR>
  <TR>
    <TD><A href="osSetConfig.htm"><STRONG>osSetConfig</STRONG></A></TD>
    <TD><FONT size="2">Sets the new value for the R4300 Configuration register</FONT></TD></TR>
  <TR>
    <TD><A href="osSetEventMesg.htm"><STRONG>osSetEventMesg</STRONG></A></TD>
    <TD><FONT size="2">Associates a message queue and message with an event</FONT></TD></TR>
  <TR>
    <TD><A href="osSetIntMask.htm"><STRONG>osSetIntMask</STRONG></A></TD>
    <TD><FONT size="2">Set the enabled interrupt mask</FONT></TD></TR>
  <TR>
    <TD><A href="osSetTLBASID.htm"><STRONG>osSetTLBASID</STRONG></A></TD>
    <TD><FONT size="2">Sets a system-wide address space identifier register</FONT></TD></TR>
  <TR>
    <TD><A href="osSetThreadPri.htm"><STRONG>osSetThreadPri</STRONG></A></TD>
    <TD><FONT size="2">Sets the priority of specified thread</FONT></TD></TR>
  <TR>
    <TD><A href="osSetTime.htm"><STRONG>osSetTime</STRONG></A></TD>
    <TD><FONT size="2">Sets the real time counter value</FONT></TD></TR>
  <TR>
    <TD><A href="osSetTimer.htm"><STRONG>osSetTimer</STRONG></A></TD>
    <TD><FONT size="2">Sets an interval or countdown timer</FONT></TD></TR>
  <TR>
    <TD><A href="osSpTaskLoad.htm"><STRONG>osSpTaskLoad</STRONG></A></TD>
    <TD><FONT size="2">Loads the given task into the serial processor</FONT></TD></TR>
  <TR>
    <TD><A href="osSpTaskStart.htm"><STRONG>osSpTaskStart</STRONG></A></TD>
    <TD><FONT size="2">Executes osSpTaskStartGo followed by osSpTaskLoad</FONT></TD></TR>
  <TR>
    <TD><A href="osSpTaskStartGo.htm"><STRONG>osSpTaskStartGo</STRONG></A></TD>
    <TD><FONT size="2">Executes a task in SP</FONT></TD></TR>
  <TR>
    <TD><A href="osSpTaskYield.htm"><STRONG>osSpTaskYield</STRONG></A></TD>
    <TD><FONT size="2">Requests that the SP&quot;yield&quot;</FONT></TD></TR>
  <TR>
    <TD><A href="osSpTaskYielded.htm"><STRONG>osSpTaskYielded</STRONG></A></TD>
    <TD><FONT size="2">Saves a task structure's appropriate state</FONT></TD></TR>
  <TR>
    <TD><A href="osStartThread.htm"><STRONG>osStartThread</STRONG></A></TD>
    <TD><FONT size="2">Starts or resumes a thread</FONT></TD></TR>
  <TR>
    <TD><A href="osStopThread.htm"><STRONG>osStopThread</STRONG></A></TD>
    <TD><FONT size="2">Suspends a thread</FONT></TD></TR>
  <TR>
    <TD><B><A href="osStopTimer.htm">osStopTimer</A></B></TD>
    <TD><FONT size="-1">Stops an interval or countdown timer</FONT></TD></TR>
  <TR>
    <TD><A href="osSyncPrintf.htm"><STRONG>osSyncPrintf</STRONG></A></TD>
    <TD><FONT size="2">Outputs formatted text to degbug port </FONT></TD></TR>
  <TR>
    <TD><A href="osTestHost.htm"><STRONG>osTestHost</STRONG></A></TD>
    <TD><FONT size="2">Simply returns a 0 until data from host is read</FONT></TD></TR>
  <TR>
    <TD><A href="osTvType.htm"><STRONG>osTvType</STRONG></A></TD>
    <TD><FONT size="2">Retuens whether the N64 system is configured for PAL video timing (0), NTSC (1), or MPAL (2)</FONT></TD></TR>
  <TR>
    <TD><A href="osUnmapTLB.htm"><STRONG>osUnmapTLB</STRONG></A></TD>
    <TD><FONT size="2">Removes any existing even or odd page mapping for the TLB entry index</FONT></TD></TR>
  <TR>
    <TD><A href="osUnmapTLBAll.htm"><STRONG>osUnmapTLBAll</STRONG></A></TD>
    <TD><FONT size="2">Removes all mappings at all indexes</FONT></TD></TR>
  <TR>
    <TD><A name="osVi" href="osViBlack.htm"><STRONG>osViBlack</STRONG></A></TD>
    <TD><FONT size="2">Blacks out the screen until a vertical retrace signal is generated</FONT></TD></TR>
  <TR>
    <TD><A href="osViFade.htm"><STRONG>osViFade</STRONG></A></TD>
    <TD><FONT size="2">Fades between the first 2 scan lines of the frame buffer
</FONT></TD></TR>
  <TR>
    <TD><A href="osViGetCurrentField.htm"><STRONG>osViGetCurrentField</STRONG></A></TD>
    <TD><FONT size="2">Returns the field number (either 0 or 1) currently being used by the video interface</FONT></TD></TR>
  <TR>
    <TD><A href="osViGetCurrentFramebuffer.htm"><STRONG>osViGetCurrentFramebuffer</STRONG></A></TD>
    <TD><FONT size="2">Returns an pointer to the currently displayed framebuffer</FONT></TD></TR>
  <TR>
    <TD><A href="osViGetCurrentLine.htm"><STRONG>osViGetCurrentLine</STRONG></A></TD>
    <TD><FONT size="2">Returns the current half line, sampled once per line</FONT></TD></TR>
  <TR>
    <TD><A href="osViGetCurrentMode.htm"><STRONG>osViGetCurrentMode</STRONG></A></TD>
    <TD><FONT size="2">Returns the video interface (VI) mode that is currently being used</FONT></TD></TR>
  <TR>
    <TD><A href="osViGetNextFramebuffer.htm"><STRONG>osViGetNextFramebuffer</STRONG></A></TD>
    <TD><FONT size="2">Returns an pointer to the next framebuffer to be displayed</FONT></TD></TR>
  <TR>
    <TD><A href="osViGetStatus.htm"><STRONG>osViGetStatus</STRONG></A></TD>
    <TD><FONT size="2">Returns the value of the video interface status/control register</FONT></TD></TR>
  <TR>
    <TD><B>osViExtendVStart</B></TD>
    <TD><FONT size="-1">Removed</FONT></TD></TR>
  <TR>
    <TD><A href="osViRepeatLine.htm"><STRONG>osViRepeatLine</STRONG></A></TD>
    <TD><FONT size="2">Repeats the first scan line of the frame buffer for the entire frame
</FONT></TD></TR>
  <TR>
    <TD><A href="osViSetEvent.htm"><STRONG>osViSetEvent</STRONG></A></TD>
    <TD><FONT size="2">Registers a message queue "mq" and a message "m" with the VI Manager</FONT></TD></TR>
  <TR>
    <TD><A href="osViSetMode.htm"><STRONG>osViSetMode</STRONG></A></TD>
    <TD><FONT size="2">Registers the VI and one of the modes to be used at the next vertical retrace</FONT></TD></TR>
  <TR>
    <TD><A href="osViSetSpecialFeatures.htm"><STRONG>osViSetSpecialFeatures</STRONG></A></TD>
    <TD><FONT size="2">Allows the caller to enable or disable various video interface special features </FONT></TD></TR>
  <TR>
    <TD><A href="osViSetXScale.htm"><STRONG>osViSetXScale</STRONG></A></TD>
    <TD><FONT size="2">Allows scaling the image up horizontally (in the X direction) to the required display format</FONT></TD></TR>
  <TR>
    <TD><A href="osViSetYScale.htm"><STRONG>osViSetYScale</STRONG></A></TD>
    <TD><FONT size="2">Allows scaling the image up vertically (in the Y direction) to the required display format</FONT></TD></TR>
  <TR>
    <TD><A href="osViSwapBuffer.htm"><STRONG>osViSwapBuffer</STRONG></A></TD>
    <TD><FONT size="2">Registers the frame buffer to be displayed at the next vertical blank interrupt</FONT></TD></TR>
  <TR>
    <TD><A href="osVirtualToPhysical.htm"><STRONG>osVirtualToPhysical</STRONG></A></TD>
    <TD><FONT size="2">Converts any CPU physical address to its virtual address</FONT></TD></TR>
  <TR>
    <TD><A name="osVoice" href="osVoiceCheckWord.htm"><B>osVoiceCheckWord</B></A></TD>
    <TD><FONT size="-1">Checks words registered in the Voice Recognition System</FONT></TD></TR>
  <TR>
    <TD><A href="osVoiceClearDictionary.htm"><B>osVoiceClearDictionary</B></A></TD>
    <TD><FONT size="-1">Initializes the Voice Recognition System word registration dictionary</FONT></TD></TR>
  <TR>
    <TD><A href="osVoiceControlGain.htm"><B>osVoiceControlGain</B></A></TD>
    <TD><FONT size="-1">Adjust the Voice Recognition System input gain</FONT></TD></TR>
  <TR>
    <TD><A href="osVoiceCountSyllables.htm"><B>osVoiceCountSyllables</B></A></TD>
    <TD><FONT size="-1">Calculates the semi-syllables in a registered word in the Voice Recognition System</FONT></TD></TR>
  <TR>
    <TD><B><A href="osVoiceGetReadData.htm">osVoiceGetReadData</A></B></TD>
    <TD><FONT size="-1">Gets the Voice Recognition System voice recognition results</FONT></TD></TR>
  <TR>
    <TD><B><A href="osVoiceInit.htm">osVoiceInit</A></B></TD>
    <TD><FONT size="-1">Initializes the Voice Recognition System structures and hardware</FONT></TD></TR>
  <TR>
    <TD><B><A href="osVoiceMaskDictionary.htm">osVoiceMaskDictionary</A></B></TD>
    <TD><FONT size="-1">Masks the registered words in the Voice Recognition System</FONT></TD></TR>
  <TR>
    <TD><B><A href="osVoiceSetWord.htm">osVoiceSetWord</A></B></TD>
    <TD><FONT size="-1">Registers a word in the Voice Recognition System dictionary</FONT></TD></TR>
  <TR>
    <TD><B><A href="osVoiceStartReadData.htm">osVoiceStartReadData</A></B></TD>
    <TD><FONT size="-1">Starts voice recognition by the Voice Recognition System</FONT></TD></TR>
  <TR>
    <TD><B><A href="osVoiceStopReadData.htm">osVoiceStopReadData</A></B></TD>
    <TD><FONT size="-1">Forcibly stops voice recognition processing by the Voice Recognition System</FONT></TD></TR>
  <TR>
    <TD><A href="osPhysicalToVirtual.htm"><STRONG>osPhysicalToVirtual</STRONG></A></TD>
    <TD><FONT size="2">Converts any CPU physical address to its virtual address</FONT></TD></TR>
  <TR>
    <TD><A href="osWriteHost.htm"><STRONG>osWriteHost</STRONG></A></TD>
    <TD><FONT size="2">Attempts to copy nbytes of data from the game starting at vAddr to the host</FONT></TD></TR>
  <TR>
    <TD><A href="osWritebackDCache.htm"><STRONG>osWritebackDCache</STRONG></A></TD>
    <TD><FONT size="2">Writes back data cache lines</FONT></TD></TR>
  <TR>
    <TD><A href="osWritebackDCacheAll.htm"><STRONG>osWritebackDCacheAll</STRONG></A></TD>
    <TD><FONT size="2">Writes back all cached locations to physical memory</FONT></TD></TR>
  <TR>
    <TD><A href="osYieldThread.htm"><STRONG>osYieldThread</STRONG></A></TD>
    <TD><FONT size="2">Yields the CPU and invokes the thread dispatcher</FONT></TD></TR>
</TABLE>

<P>
<h3><a name=deleted>Functions removed</a></h3>
</P>
<P>
<A href="osPfsReSizeFile.htm"><STRONG>osPfsReSizeFile</STRONG></A>
</P>
<P>
<A href="osPfsInit.htm"><STRONG>osPfsInit</STRONG></A>
</P>
<P>
<A href="osViExtendVStart.htm"><STRONG>osViExtendVStart</STRONG></A>
</P>
<p>
<TABLE border="1">
  <TR>
    <TD><A href="osEPiRawStartDma.htm"><STRONG>osEPiRawStartDma</STRONG></A><BR>
<A href="osEPiRawWriteIo.htm"><STRONG>osEPiRawWriteIo</STRONG></A><BR>
<A href="osEPiRawReadIo.htm"><STRONG>osEPiRawReadIo</STRONG></A><BR>
<A href="osPiRawReadIo.htm"><STRONG>osPiRawReadIo</STRONG></A><BR>
<A href="osPiRawStartDma.htm"><STRONG>osPiRawStartDma<BR>
</STRONG></A><A href="osPiRawWriteIo.htm"><STRONG>osPiRawWriteIo</STRONG></A></TD>
    <TD>Removed in OS2.0I/patch5 or later.<BR>
For details, please see <A href="../relnote_i/readme_raw.htm">here</A>.</TD></TR>
</TABLE>
</p>

</BODY>
</HTML>
