<!DOCTYPE HTML PUBLIC "-//IBM//DTD HPB HTML//EN">
<HTML>
<HEAD>
<LINK REL=STYLESHEET TYPE="text/css" HREF="../N64man.css">
<Editor's Notes: JLR made reformating and copy edits.
  PWC- updated formatting
-->
<TITLE>osCreateViManager</TITLE>
</HEAD>

<BODY bgcolor="#ffffff">

<H1>osCreateViManager </h1>

<h2>Function</h2>

<P>osCreateViManager</p>

<p><i>Creates VI manager</i></P>

<H3>Syntax</H3>

<p><PRE><CODE>#include &lt;ultra64.h&gt;        /* <A HREF="../../header/os.htm">os.h</A> */
void osCreateViManager(OSPri pri);</CODE></PRE></p>

<H3>Arguments</H3>
<p>
<DL>
  <DT><B>pri</B>
  <DD>Priority(Normally, use OS_PRIORITY_VIMGR)
</DL></p>

<H3>Return Value</H3>
<P>
None.
</P>
<H3>Description</H3>
<P>
The VI manager is a system thread that must be created and invoked at the beginning of the application. To do this, call <B>osCreateViManager()</B> for the VI manager to allow vertical retrace interrupt to occur at an early stage.  Usually, this priority should be set to OS_PRIORITY_VIMGR. The VI manager is designed to service both the VI interrupt (OS_EVENT_VI) and CPU counter interrupt(OS_EVENT_COUNTER) in the most efficient manner. Each interrupting event can be performed using <A HREF="osViSetEvent.htm">osViSetEvent</A> or <A HREF="osSetTimer.htm">osSetTimer</A>.
</P>
<H3>Example</H3>
<p>
<PRE><CODE>//	Launch VI Manager & black out
	<B>osCreateViManager</B>(OS_PRIORITY_VIMGR);
#if (SCREEN_WD==320)&amp;&amp;(SCREEN_HT==240)		// Settings for low-resolution
	osViSetMode(&amp;osViModeNtscLan1);
#elif (SCREEN_WD==640)&amp;&amp;(SCREEN_HT==480)	// Settings for high-resolution
	osViSetMode(&amp;osViModeNtscHaf1);
#else
#error	&quot;Illegal Screen size&quot;
#endif
	osViBlack(TRUE);</CODE></PRE></p>

<H3>See Also</H3>
<P>
<A HREF="osViSetEvent.htm">osViSetEvent</A>, <A HREF="osSetTimer.htm">osSetTimer</A>
</P>

</BODY>
</HTML>
