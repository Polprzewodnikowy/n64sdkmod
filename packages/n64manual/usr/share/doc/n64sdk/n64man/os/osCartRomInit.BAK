<!DOCTYPE HTML PUBLIC "-//IBM//DTD HPB HTML//EN">
<HTML>
<HEAD>
<LINK REL=STYLESHEET TYPE="text/css" HREF="../N64man.css">
<Editor's Notes: JLR made reformating and copy edits.>
<title>osCratRomInit</title>
</head>
<body bgcolor="#FFFFFF">

<h1><strong>osCartRomInit</strong></h1>

<h3>Function</h3>

<p>osCartRomInit</p>

<p><i> Returns information regarding the hardware settings necessary when using a cartridge</i></p>

<h3>Syntax</h3>
<p>
<blockquote>
    <pre>#include &lt;ultra64.h&gt;
OSPiHandle *osCartRomInit(void)</pre>
</blockquote>
</p>
<h3>Description</h3>

<p>osCartRomInit returns information regarding the hardware settings necessary when using a cartridge. Specifically, it returns</p>

<ol>
    <li>the PI domain it belongs to</li>
    <li>PI bus settings</li>
</ol>

<p>For details, please see <a href="osEPiRawStartDma.htm">osEPiStartDma</a>, <a href="osEPiStartDma.htm">osEPiStartDma</a>.</p>

<p>OSPiHandle is a global data structural unit returned by this routine. It functions as a handle to be referenced by the EPI (expanded peripheral interface) routine. When the osEPi(Raw) function is used for the ROM Emulator, the OSPiHandle structural unit to be used is determined by the value returned by the osCartRomInit function. </p>

<h3>Note</h3>

<p>The EPI routine actually does the bus Initialization. This function (osCartRomInit) just returns information needed for initialization as a structure. </p>

<h3>See Also</h3>

<p><a href="osEPiRawStartDma.htm">osEPiRawStartDma</a>, <a
href="osEPiStartDma.htm">osEPiStartDma</a></p>
</body>
</html>
