<!DOCTYPE HTML PUBLIC "-//IBM//DTD HPB HTML//EN">
<HTML>
<HEAD>
<LINK REL=STYLESHEET TYPE="text/css" HREF="../N64man.css">
<Editor's Notes: JLR made reformating and copy edits.
MAP- added links, updated format>
<title>osCreateScheduler</title>
</head>

<body bgcolor="#FFFFFF">
<font style="font-size: 12pt"><b>osCreateScheduler</b></font><font style="font-size: 9pt"><b> (function)</b></font>

<p><i>Creates an RCP task scheduler</i></p>

<h3>Syntax</h3>
<p>
<blockquote>
    <pre>#include &lt;ultra64.h&gt;     /* <A HREF="../../header/ultra64.htm">ultra64.h</A> */
void osCreateScheduler(OSSched *s, void *stack, OSPri priority, 
                u8 mode, u8 retreceCount);</pre>
</blockquote>
</p>
<h3>Arguments</h3>
<p>
<dl>
    <dt><strong>s</strong></dt>
    <dd>the pointer to the scheduler structure to initialize </dd>
    <dt><strong>stack</strong></dt>
    <dd>the pointer to the stack for the scheduler thread </dd>
    <dt><strong>priority</strong></dt>
    <dd>the priority for the scheduler thread </dd>
    <dt><strong>mode</strong></dt>
    <dd>the video mode with which to initialize the VI Manager </dd>
    <dt><strong>retraceCount</strong></dt>
    <dd>the number of retraces per retrace message sent</dd>
</dl></p>

<h3>Description</h3>

<p>The Scheduler is a host CPU thread that is responsible for executing audio and graphics tasks on the RCP so that host and RCP overrun is minimized or eliminated.</p>

<p>Each video retrace, the Scheduler reads the new tasks generated by the scheduler client threads from the task queue and adds them to the end of a real-time (audio) or non-real-time (graphics) task schedule list.</p>

<p>If the previous frame's graphics task has overrun, the Scheduler causes the task to yield. It then runs the next audio task, resuming the yielded task when the audio task has completely processed. Then it runs any additional graphics tasks that are to be run in the current frame.</p>

<p>When a task completes, the Scheduler sends a message to the client indicating that the work it requested is complete.</p>

<p>Before using the Scheduler, you must first call <tt>osCreateScheduler</tt> to initialize the OSSched data structure along with its message queues and the VI Manager. The <tt>osCreateScheduler</tt> function spawns a thread to schedule and manage task execution. One of its arguments is the thread priority, which should be higher than that of the threads that generate the command lists. </p>

<h3>See Also</h3>

<p><a href="osScAddClient.htm">osScAddClient</a>, <a href="osScGetTaskQ.htm">osScGetTaskQ</a></p>
<H3>Revision History</H3>
<P>
1999/04/30  Changed format
</P>

</body>
</html>
