<!DOCTYPE HTML PUBLIC "-//IBM//DTD HPB HTML//EN">
<HTML>
<HEAD>
<LINK REL=STYLESHEET TYPE="text/css" HREF="../N64man.css">
<Editor's Notes: JLR made reformating and copy edits.
MAP- added links, updated format>
<title>osCratRomInit</title>
</head>
<body bgcolor="#FFFFFF">
<font style="font-size: 12pt"><b>osCartRomInit</b></font><font style="font-size: 9pt"><b> (function)</b></font>

<p><i> Returns information regarding the hardware settings necessary when using a cartridge</i></p>

<h3>Syntax</h3>
<p>
<blockquote>
    <pre>#include &lt;ultra64.h&gt;     /* <A HREF="../../header/ultra64.htm">ultra64.h</A> */
OSPiHandle *osCartRomInit(void)</pre>
</blockquote>
</p>
<h3>Description</h3>

<p><tt>osCartRomInit</tt> returns information regarding the hardware settings necessary when using a cartridge. Specifically, it returns</p>

<ol>
    <li>the PI domain it belongs to</li>
    <li>PI bus settings</li>
</ol>

<p>For details, please see <a href="osEPiRawStartDma.htm">osEPiStartDma</a>, <a href="osEPiStartDma.htm">osEPiStartDma</a>.</p>

<p><tt>OSPiHandle</tt> is a global data structural unit returned by this routine. It functions as a handle to be referenced by the EPI (expanded peripheral interface) routine. When the osEPi(Raw) function is used for the ROM Emulator, the OSPiHandle structural unit to be used is determined by the value returned by the <tt>osCartRomInit</tt> function. </p>

<h3>Note</h3>

<p>The EPI routine actually does the bus Initialization. This function (<tt>osCartRomInit</tt>) just returns information needed for initialization in a structure. </p>

<h3>See Also</h3>

<p><a href="osEPiRawStartDma.htm">osEPiRawStartDma</a>, <a
href="osEPiStartDma.htm">osEPiStartDma</a></p>
<h3>Revision History</h3>
<p>1999/04/30  Changed Format</p>
<br><br>


</body>
</html>
