<HTML>
<HEAD>
<TITLE>mhcmodul</TITLE>
<LINK REL=STYLESHEET TYPE="text/css" HREF="../../../mobile/allman.css">
<!-- Editor's Notes: 9/22/1999 Ron Daring -->
</HEAD>
  <BODY bgcolor="#FFFFFF"><h1>Function</h1>
<hr>
<a name="mhcModuleInit">
</A>
<h1><a name="mhcModuleInit">mhcModuleInit</A></h1>
<a name="mhcModuleInit">
</A>
<p><a name="mhcModuleInit"><i>Initializes MhcModule</i></A></p>
<a name="mhcModuleInit">
</A>
<H2><a name="mhcModuleInit">Syntax</A></H2>
<a name="mhcModuleInit">
</A>
<blockquote><a name="mhcModuleInit">
    </A>
<pre><a name="mhcModuleInit">#include &lt;mhc/Module.h&gt;
void mhcModuleInit( MhcModule *module_ptr )
</A></pre></blockquote>
<a name="mhcModuleInit">
</A>
<H2><a name="mhcModuleInit">Description</A></H2>
<a name="mhcModuleInit">
  Initializes MhcModule
</A>
<H2><a name="mhcModuleInit">See Also</A></H2>
<a name="mhcModuleInit">
</A><A href="#MhcModule">MhcModule</A><a name="mhcModuleInit">

</A>
<hr>

<a name="mhcModuleDestroy">
</A>
<h1><a name="mhcModuleDestroy">mhcModuleDestroy</A></h1>
<a name="mhcModuleDestroy">
</A>
<p><a name="mhcModuleDestroy"><i>Destroys MhcModule</i></A></p>
<a name="mhcModuleDestroy">
</A>
<H2><a name="mhcModuleDestroy">Syntax</A></H2>
<a name="mhcModuleDestroy">
</A>
<blockquote><a name="mhcModuleDestroy">
    </A>
<pre><a name="mhcModuleDestroy">#include &lt;mhc/Module.h&gt;
void mhcModuleDestroy( MhcModule *module_ptr )
</A></pre></blockquote>
<a name="mhcModuleDestroy">
</A>
<H2><a name="mhcModuleDestroy">Description</A></H2>
<a name="mhcModuleDestroy">
  Destroys MhcModule

</A>
<hr>

<a name="mhcModuleBeginEval">
</A>
<h1><a name="mhcModuleBeginEval">mhcModuleBeginEval</A></h1>
<a name="mhcModuleBeginEval">
</A>
<p><a name="mhcModuleBeginEval"><i>Initializes for evaluating MhcModule</i></A></p>
<a name="mhcModuleBeginEval">
</A>
<H2><a name="mhcModuleBeginEval">Syntax</A></H2>
<a name="mhcModuleBeginEval">
</A>
<blockquote><a name="mhcModuleBeginEval">
    </A>
<pre><a name="mhcModuleBeginEval">#include &lt;mhc/Module.h&gt;
void mhcModuleBeginEval( MhcModule *module_ptr )
</A></pre></blockquote>
<a name="mhcModuleBeginEval">
</A>
<H2><a name="mhcModuleBeginEval">Description</A></H2>
<a name="mhcModuleBeginEval">
  Initializes for evaluating MhcModule

</A>
<hr>

<a name="mhcModuleGetExternalNode">
</A>
<h1><a name="mhcModuleGetExternalNode">mhcModuleGetExternalNode</A></h1>
<a name="mhcModuleGetExternalNode">
</A>
<p><a name="mhcModuleGetExternalNode"><i>Resolves external reference node</i></A></p>
<a name="mhcModuleGetExternalNode">
</A>
<H2><a name="mhcModuleGetExternalNode">Syntax</A></H2>
<a name="mhcModuleGetExternalNode">
</A>
<blockquote><a name="mhcModuleGetExternalNode">
    </A>
<pre><a name="mhcModuleGetExternalNode">#include &lt;mhc/Module.h&gt;
MhcNode *mhcModuleGetExternalNode( MhcModule *module_ptr,
                                   MhcScene *scene_ptr,
                                   const u32 index )
</A></pre></blockquote>
<a name="mhcModuleGetExternalNode">
</A>
<H2><a name="mhcModuleGetExternalNode">Description</A></H2>
<a name="mhcModuleGetExternalNode">
  Resolves external reference node

</A>
<hr>

<a name="mhcModuleGetNodeByName">
</A>
<h1><a name="mhcModuleGetNodeByName">mhcModuleGetNodeByName</A></h1>
<a name="mhcModuleGetNodeByName">
</A>
<p><a name="mhcModuleGetNodeByName"><i>Searches for a node specified by its name</i></A></p>
<a name="mhcModuleGetNodeByName">
</A>
<H2><a name="mhcModuleGetNodeByName">Syntax</A></H2>
<a name="mhcModuleGetNodeByName">
</A>
<blockquote><a name="mhcModuleGetNodeByName">
    </A>
<pre><a name="mhcModuleGetNodeByName">#include &lt;mhc/Module.h&gt;
MhcNode *mhcModuleGetNodeByName( MhcModule *module_ptr,
                                 const char *node_name )
</A></pre></blockquote>
<a name="mhcModuleGetNodeByName">
</A>
<H2><a name="mhcModuleGetNodeByName">Description</A></H2>
<a name="mhcModuleGetNodeByName">
  Searches for a node specified by its name

</A>
<hr>

<a name="mhcModuleGetNodeByType">
</A>
<h1><a name="mhcModuleGetNodeByType">mhcModuleGetNodeByType</A></h1>
<a name="mhcModuleGetNodeByType">
</A>
<p><a name="mhcModuleGetNodeByType"><i>Returns the number of specified nodes by type</i></A></p>
<a name="mhcModuleGetNodeByType">
</A>
<H2><a name="mhcModuleGetNodeByType">Syntax</A></H2>
<a name="mhcModuleGetNodeByType">
</A>
<blockquote><a name="mhcModuleGetNodeByType">
    </A>
<pre><a name="mhcModuleGetNodeByType">#include &lt;mhc/Module.h&gt;
u32 mhcModuleGetNodeByType( MhcModule *module_ptr,
                            const u32 type,
                            const u32 array_size,
                            MhcNode **node_ptr_array )
</A></pre></blockquote>
<a name="mhcModuleGetNodeByType">
</A>
<H2><a name="mhcModuleGetNodeByType">Description</A></H2>
<a name="mhcModuleGetNodeByType">
  Returns the number of specified nodes by type

</A>
<hr>

<a name="mhcModuleActivate">
</A>
<h1><a name="mhcModuleActivate">mhcModuleActivate</A></h1>
<a name="mhcModuleActivate">
</A>
<p><a name="mhcModuleActivate"><i>Activates MhcModule</i></A></p>
<a name="mhcModuleActivate">
</A>
<H2><a name="mhcModuleActivate">Syntax</A></H2>
<a name="mhcModuleActivate">
</A>
<blockquote><a name="mhcModuleActivate">
    </A>
<pre><a name="mhcModuleActivate">#include &lt;mhc/Module.h&gt;
void mhcModuleActivate( MhcModule *module_ptr )
</A></pre></blockquote>
<a name="mhcModuleActivate">
</A>
<H2><a name="mhcModuleActivate">Description</A></H2>
<a name="mhcModuleActivate">
  Activates MhcModule

</A>
<hr>

<a name="mhcModuleInactivate">
</A>
<h1><a name="mhcModuleInactivate">mhcModuleInactivate</A></h1>
<a name="mhcModuleInactivate">
</A>
<p><a name="mhcModuleInactivate"><i>Inactivates MhcModule</i></A></p>
<a name="mhcModuleInactivate">
</A>
<H2><a name="mhcModuleInactivate">Syntax</A></H2>
<a name="mhcModuleInactivate">
</A>
<blockquote><a name="mhcModuleInactivate">
    </A>
<pre><a name="mhcModuleInactivate">#include &lt;mhc/Module.h&gt;
void mhcModuleInactivate( MhcModule *module_ptr )
</A></pre></blockquote>
<a name="mhcModuleInactivate">
</A>
<H2><a name="mhcModuleInactivate">Description</A></H2>
<a name="mhcModuleInactivate">
  Inactivates MhcModule

</A>
<hr>

<a name="mhcModuleBind">
</A>
<h1><a name="mhcModuleBind">mhcModuleBind</A></h1>
<a name="mhcModuleBind">
</A>
<p><a name="mhcModuleBind"><i>Binds Module with scene.</i></A></p>
<a name="mhcModuleBind">
</A>
<H2><a name="mhcModuleBind">Syntax</A></H2>
<a name="mhcModuleBind">
</A>
<blockquote><a name="mhcModuleBind">
    </A>
<pre><a name="mhcModuleBind">#include &lt;mhc/Module.h&gt;
void mhcModuleBind( MhcModule *module_ptr,
                    MhcScene *scene_ptr )
</A></pre></blockquote>
<a name="mhcModuleBind">
</A>
<H2><a name="mhcModuleBind">Description</A></H2>
<a name="mhcModuleBind">
  Binds Module with scene, which makes all the module pointers available.
</A>
<H2><a name="mhcModuleBind">See Also</A></H2>
<a name="mhcModuleBind">
</A><A href="mhcscene.htm#MhcScene">MhcScene</A><a name="mhcModuleBind">

</A>
<hr>

<a name="mhcModuleLoad">
</A>
<h1><a name="mhcModuleLoad">mhcModuleLoad</A></h1>
<a name="mhcModuleLoad">
</A>
<p><a name="mhcModuleLoad"><i>Imports Module</i></A></p>
<a name="mhcModuleLoad">
</A>
<H2><a name="mhcModuleLoad">Syntax</A></H2>
<a name="mhcModuleLoad">
</A>
<blockquote><a name="mhcModuleLoad">
    </A>
<pre><a name="mhcModuleLoad">#include &lt;mhc/Module.h&gt;
int mhcModuleLoad( MhcModule *module_ptr,
                   MifFileParser *file_parser_ptr,
                   MisInput *input_ptr )
</A></pre></blockquote>
<a name="mhcModuleLoad">
</A>
<H2><a name="mhcModuleLoad">Description</A></H2>
<a name="mhcModuleLoad">
  Imports Module
</A>
<H2><a name="mhcModuleLoad">See Also</A></H2>
<a name="mhcModuleLoad">
</A><A href="../mif/miffpars.htm#MifFileParser">MifFileParser</A><a name="mhcModuleLoad">
</A><A href="../mis/misinput.htm#MisInput">MisInput</A><a name="mhcModuleLoad">

</A>
<hr>

<a name="mhcModuleUnload">
</A>
<h1><a name="mhcModuleUnload">mhcModuleUnload</A></h1>
<a name="mhcModuleUnload">
</A>
<p><a name="mhcModuleUnload"><i>Deletes the contents of module that has been imported</i></A></p>
<a name="mhcModuleUnload">
</A>
<H2><a name="mhcModuleUnload">Syntax</A></H2>
<a name="mhcModuleUnload">
</A>
<blockquote><a name="mhcModuleUnload">
    </A>
<pre><a name="mhcModuleUnload">#include &lt;mhc/Module.h&gt;
int mhcModuleUnload( MhcModule *module_ptr );
</A></pre></blockquote>
<a name="mhcModuleUnload">
</A>
<H2><a name="mhcModuleUnload">Description</A></H2>
<a name="mhcModuleUnload">
  Deletes the contents of module that has been imported


</A>
<hr>
<h1><a name="mhcModuleUnload">Macro</A></h1><hr>
<hr>

<a name="_mhcModuleIsActive">
</A>
<h1><a name="_mhcModuleIsActive">_mhcModuleIsActive</A></h1>
<a name="_mhcModuleIsActive">
</A>
<p><a name="_mhcModuleIsActive"><i>Checks if Module is active</i></A></p>
<a name="_mhcModuleIsActive">
</A>
<H2><a name="_mhcModuleIsActive">Syntax</A></H2>
<a name="_mhcModuleIsActive">
</A>
<blockquote><a name="_mhcModuleIsActive">
    </A>
<pre><a name="_mhcModuleIsActive">#include &lt;mhc/Module.h&gt;
_mhcModuleIsActive(module_ptr)
</A></pre>
<a name="_mhcModuleIsActive">
</A></blockquote>
<a name="_mhcModuleIsActive">
</A>
<H2><a name="_mhcModuleIsActive">Description</A></H2>
<a name="_mhcModuleIsActive">
  Checks if Module is active

</A>
<hr>

<a name="_mhcModuleGetNodeByIndex">
</A>
<h1><a name="_mhcModuleGetNodeByIndex">_mhcModuleGetNodeByIndex</A></h1>
<a name="_mhcModuleGetNodeByIndex">
</A>
<p><a name="_mhcModuleGetNodeByIndex"><i>Searches for a node specified by Index</i></A></p>
<a name="_mhcModuleGetNodeByIndex">
</A>
<H2><a name="_mhcModuleGetNodeByIndex">Syntax</A></H2>
<a name="_mhcModuleGetNodeByIndex">
</A>
<blockquote><a name="_mhcModuleGetNodeByIndex">
    </A>
<pre><a name="_mhcModuleGetNodeByIndex">#include &lt;mhc/Module.h&gt;
_mhcModuleGetNodeByIndex(module_ptr,index)
</A></pre></blockquote>
<a name="_mhcModuleGetNodeByIndex">
</A>
<H2><a name="_mhcModuleGetNodeByIndex">Description</A></H2>
<a name="_mhcModuleGetNodeByIndex">
  Searches for a node specified by Index

</A>
<hr>

<a name="_mhcModuleAddNode">
</A>
<h1><a name="_mhcModuleAddNode">_mhcModuleAddNode</A></h1>
<a name="_mhcModuleAddNode">
</A>
<p><a name="_mhcModuleAddNode"><i>Adds a node to Module</i></A></p>
<a name="_mhcModuleAddNode">
</A>
<H2><a name="_mhcModuleAddNode">Syntax</A></H2>
<a name="_mhcModuleAddNode">
</A>
<blockquote><a name="_mhcModuleAddNode">
    </A>
<pre><a name="_mhcModuleAddNode">#include &lt;mhc/Module.h&gt;
_mhcModuleAddNode(module_ptr,node_ptr)
</A></pre></blockquote>
<a name="_mhcModuleAddNode">
</A>
<H2><a name="_mhcModuleAddNode">Description</A></H2>
<a name="_mhcModuleAddNode">
  Adds a node to Module

</A>
<hr>
<h1><a name="_mhcModuleAddNode">Structure</A></h1><hr>
<hr>

<a name="MhcModule">
</A>
<h1><a name="MhcModule">MhcModule</A></h1><blockquote><a name="MhcModule">
</A>
<pre><a name="MhcModule">
#include &lt;mhc/Module.h&gt;

typedef struct _MhcModule
{
    u16                         status;
    u16                         is_active;
    u32                         max_nodes;
    u32                         number_of_nodes;
    struct _MhcNode             **node_ptr_array;
    u32                         number_of_root_nodes;
    struct _MhcNodeHandle       *root_node_handle_array;
    u32                         number_of_references;
    struct _MhcReference        *reference_array;
    char                        *symbol_table;
    u32                         number_of_external_nodes;
    struct _MhcExternalNode     *external_node_array;

    /* The following are only used in the flat mode.*/
    MvmMatrix33f                orientation;
    MvmMatrix33f                scaled_orientation;
    MvmVector3f                 translation;
} MhcModule;
</A></pre>
<a name="MhcModule">
<br>
</A></blockquote>
</BODY>
</HTML>
