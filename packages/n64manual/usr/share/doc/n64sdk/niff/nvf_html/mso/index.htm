<HTML>
<HEAD>
<TITLE>mso Index</TITLE>
<LINK REL=STYLESHEET TYPE="text/css" HREF="../../../mobile/allman.css">
<!-- Editor's Notes: 9/23/1999 Ron Daring -->
</HEAD>
<BODY bgcolor="#FFFFFF"><H1><A href="msoalloc.htm">msoAllocator*</A> Customizes memory allocation</h1>
<TABLE border="1">
  <TBODY>
    <TR>
      <TD>Function</TD>
      <TD><A href="msoalloc.htm#msoAllocatorAllocate" target="contents">msoAllocatorAllocate</A></TD>
      <TD>Gets <TT>size</TT> bytes of memory with an 8-byte boundary</TD>
    </TR>
    <TR>
      <TD>Function</TD>
      <TD><A href="msoalloc.htm#msoAllocatorAllocateAligned" target="contents">msoAllocatorAllocateAligned</A></TD>
      <TD>Gets <TT>size</TT> bytes of memory with the boundary specified by <TT>align</TT></TD>
    </TR>
    <TR>
      <TD>Function</TD>
      <TD><A href="msoalloc.htm#msoAllocatorEnableDebugMode" target="contents">msoAllocatorEnableDebugMode</A></TD>
      <TD>Switches allocator to debug mode</TD>
    </TR>
    <TR>
      <TD>Function</TD>
      <TD><A href="msoalloc.htm#msoAllocatorFree" target="contents">msoAllocatorFree</A></TD>
      <TD>Opens memory acquired by <TT>msoAllocatorAllocate( )</TT>, <TT>msoAllocatorAllocateAligned( )</TT></TD>
    </TR>
    <TR>
      <TD>Function</TD>
      <TD><A href="msoalloc.htm#msoAllocatorIsDebugMode" target="contents">msoAllocatorIsDebugMode</A></TD>
      <TD>Returns whether the allocator is operating in debug mode</TD>
    </TR>
    <TR>
      <TD>Function</TD>
      <TD><A href="msoalloc.htm#msoAllocatorGetDebugCookie" target="contents">msoAllocatorGetDebugCookie</A></TD>
      <TD>Gets the debug cookie</TD>
    </TR>
    <TR>
      <TD>Function</TD>
      <TD><A href="msoalloc.htm#msoAllocatorSetDebugCookie" target="contents">msoAllocatorSetDebugCookie</A></TD>
      <TD>Sets the debug cookie</TD>
    </TR>
    <TR>
      <TD>Function</TD>
      <TD><A href="msoalloc.htm#msoGetDefaultAllocator" target="contents">msoGetDefaultAllocator</A></TD>
      <TD>Gets the default allocator</TD>
    </TR>
    <TR>
      <TD>Function</TD>
      <TD><A href="msoalloc.htm#msoSetDefaultAllocator" target="contents">msoSetDefaultAllocator</A></TD>
      <TD>Sets the default allocator</TD>
    </TR>
    <TR>
      <TD>Function</TD>
      <TD><A href="msoalloc.htm#msoFree" target="contents">msoFree</A></TD>
      <TD>Releases memory using the default allocator</TD>
    </TR>
    <TR>
      <TD>Function</TD>
      <TD><A href="msoalloc.htm#msoMalloc" target="contents">msoMalloc</A></TD>
      <TD>Acquires memory using the default allocator</TD>
    </TR>
    <TR>
      <TD>Function</TD>
      <TD><A href="msoalloc.htm#msoMallocAligned" target="contents">msoMallocAligned</A></TD>
      <TD>Acquires memory using the default allocator</TD>
    </TR>
  </TBODY>
</TABLE>
<H1><A href="msobilist.htm">_msoBilistBase*</A> Macro group for bi-directional list</h1>
<H1><A href="msoderiv.htm">_msoDerive*</A> Macro group for simple installation of an object succession</h1>
<H1><A href="msolistb.htm">_msoListBase*</A> Macro group for uni-directional lists</h1>
<H1><A href="msocasal.htm">msoCascadeAllocator*</A> Integrates two Allocators and handles them as one Allocator</h1>
<TABLE border="1">
  <TBODY>
    <TR>
      <TD>Function</TD>
      <TD><A href="msocasal.htm#msoCascadeAllocatorInit" target="contents">msoCascadeAllocatorInit</A></TD>
      <TD>Initializes <TT>msoCascadeAllocator</TT></TD>
    </TR>
  </TBODY>
</TABLE>
<H1><A href="msogfxbf.htm">msoGfxBuffer</A> Manages a dynamic <TT>gfx</TT> buffer</h1>
<TABLE border="1">
  <TBODY>
    <TR>
      <TD>Function</TD>
      <TD><A href="msogfxbf.htm#msoGfxBufferDestroy" target="contents">msoGfxBufferDestroy</A></TD>
      <TD>Destroys the <TT>gfx</TT> buffer</TD>
    </TR>
    <TR>
      <TD>Function</TD>
      <TD><A href="msogfxbf.htm#msoGfxBufferInit" target="contents">msoGfxBufferInit</A></TD>
      <TD>Initializes the <TT>gfx</TT> buffer</TD>
    </TR>
    <TR>
      <TD>Function</TD>
      <TD><A href="msogfxbf.htm#msoGfxBufferReserve" target="contents">msoGfxBufferReserve</A></TD>
      <TD>Reserves one area for <TT>gfx</TT> and returns its pointer</TD>
    </TR>
    <TR>
      <TD>Function</TD>
      <TD><A href="msogfxbf.htm#msoGfxBufferStore" target="contents">msoGfxBufferStore</A></TD>
      <TD>Writes all <TT>gfx</TT> stored in the <TT>gfx</TT> buffer to <TT>dest_array</TT></TD>
    </TR>
  </TBODY>
</TABLE>
<H1><A href="msohaloc.htm">msoHeapAllocator</A> Allocates heap memory for multi-thread applications</h1>
<TABLE border="1">
  <TBODY>
    <TR>
      <TD>Function</TD>
      <TD><A href="msohaloc.htm#msoHeapAllocatorInit" target="contents">msoHeapAllocatorInit</A></TD>
      <TD>Initializes <TT>MsoHeapAllocator</TT></TD>
    </TR>
  </TBODY>
</TABLE>
<H1><A href="msodebug.htm">msoPrintf,msoDebug</A> Macros and functions for debugging</h1>
<TABLE border="1">
  <TBODY>
    <TR>
      <TD>Function</TD>
      <TD><A href="msodebug.htm#msoPrintfInit" target="contents">msoPrintfInit</A></TD>
      <TD>Initializes to utilize <TT>msoPrintf( )</TT></TD>
    </TR>
    <TR>
      <TD>Macro</TD>
      <TD><A href="msodebug.htm#_msoPrintfInit" target="contents">_msoPrintfInit</A></TD>
      <TD>Call either <TT>msoPrintfInit( MSO_DEBUG_ISV )</TT> or <TT>msoPrintfInit( MSO_DEBUG_OS )</TT></TD>
    </TR>
    <TR>
      <TD>Macro</TD>
      <TD><A href="msodebug.htm#CDEBUG">CDEBUG</A></TD>
      <TD>Executes <TT>cmd</TT> when the value of the macro <TT>__DEBUG__</TT> is greater than "level"</TD>
    </TR>
    <TR>
      <TD>Macro</TD>
      <TD><A href="msodebug.htm#CASSERT">CASSERT</A></TD>
      <TD>If the value of the macro <TT>__DEBUG__</TT> is "level" and the conditional expression "ex" is true, display is in the 
  format <TT>&quot;ASSERT filename:line ex&quot;</TT>.</TD>
    </TR>
  </TBODY>
</TABLE>
</BODY>
</HTML>
