<HTML>
<HEAD>
<TITLE>mvmmatrix</TITLE>
</HEAD>
  <BODY bgcolor="#FFFFFF">
<h1>MvmMatrix</h1>
<p><i>Defines calculations pertaining to matrices</i></p>
<pre>
#include &lt;mvm/Matrix.h&gt;

Types
* MvmMatrix22f
  2X2 matrix

* MvmMatrix33f
  3X3 matrix

* MvmMatrix44f
  4X4 matrix

Macro
* _mvmMatrix22fCopy( dest, src )
  Copies MvmMatrix22f from src to dest

* _mvmMatrix33fCopy( dest, src )
  Copies MvmMatrix33f from src to dest

* _mvmMatrix44fCopy( dest, src )
  Copies MvmMatrix44f from src to dest 

* _mvmMatrix22fAdd( dest, a, b )
  Stores a+b in dest

* _mvmMatrix33fAdd( dest, src )
  Stores a+b in dest

* _mvmMatrix44fAdd( dest, src )
  Stores a+b in dest 

* _mvmMatrix22fSub( dest, a, b )
  Stores a-b in dest 

* _mvmMatrix33fSub( dest, src )
  Stores a-b in dest 

* _mvmMatrix44fSub( dest, src )
  Stores a-b in dest

* _mvmMatrix22fProduct( dest, a, b )
  Stores ab in dest

* _mvmMatrix33fProduct( dest, src )
  Stores ab in dest

* _mvmMatrix44fProduct( dest, src )
  Stores ab in dest

* _mvmMatrix22fScale( dest, scale, matrix )
  Stores the product of scale and matrix in dest

* _mvmMatrix33fScale( dest, scale, matrix )
  Stores the product of scale and matrix in dest

* _mvmMatrix44fScale( dest, scale, matrix )
  Stores the product of scale and matrix in dest

Function
* mvmMatrix22fCopy( dest, src )
  Copies MvmMatrix22f from src to dest

* mvmMatrix33fCopy( dest, src )
  Copies MvmMatrix33f from src to dest

* mvmMatrix44fCopy( dest, src )
  Copies MvmMatrix44f from src to dest

* mvmMatrix22fAdd( dest, a, b )
  Stores a+b in dest

* mvmMatrix33fAdd( dest, src )
  Stores a+b in dest

* mvmMatrix44fAdd( dest, src )
  Stores a+b in dest

* mvmMatrix22fSub( dest, a, b )
  Stores a-b in dest 

* mvmMatrix33fSub( dest, src )
  Stores a-b in dest 

* mvmMatrix44fSub( dest, src )
  Stores a-b in dest 

* mvmMatrix22fProduct( dest, a, b )
  Stores ab in dest

* mvmMatrix33fProduct( dest, a, b )
  Stores ab in dest

* mvmMatrix44fProduct( dest, a, b )
  Stores ab in dest

* mvmMatrix22fScale( MvmMatrix22f dest, const float scale[ 2 ],
					const MvmMatrix22f matrix )
  Stores the product of scale and matrix in dest

* mvmMatrix33fScale( MvmMatrix33f dest, const float scale[ 3 ],
					const MvmMatrix33f matrix )
  Stores the product of scale and matrix in dest

* mvmMatrix44fScale( MvmMatrix44f dest, const float scale[ 4 ],
					const MvmMatrix44f matrix )
  Stores the product of scale and matrix in dest

* mvmMatrix33fRotateX( MvmMatrix33f dest, const float angle,
					  const MvmMatrix33f matrix )
  Stores the value in dest. when the matrix is rotated by angle 
  (value is radian) around the X axis

* mvmMatrix33fRotateY( MvmMatrix33f dest, const float angle,
					  const MvmMatrix33f matrix )
  Stores the value in dest. when the matrix is rotated by angle 
  (value is radian) around the Y axis

* mvmMatrix33fRotateZ( MvmMatrix33f dest, const float angle,
					  const MvmMatrix33f matrix )
  Stores the value in dest. when the matrix is rotated by angle 
  (value is radian) around the Z axis 

* mvmMatrix33fRotation( MvmMatrix33f dest, const float angle,
					   const float axis[ 3 ] )
  Stores the value in dest. when the matrix is rotated by angle 
  (value is radian) around "axis"

* mvmMatrix33fOrientation( MvmMatrix33f dest, const float ex[ 3 ],
					      const float ey[ 3 ] )
  Stores the rotation matrix in dest. in which ex is the X axis 
  and ey is the Y axis
</pre>

  </BODY>
</HTML>
