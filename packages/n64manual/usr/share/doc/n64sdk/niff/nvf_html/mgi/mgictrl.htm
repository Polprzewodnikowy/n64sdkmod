<HTML>
<HEAD>
<TITLE>mgictrl</TITLE>
<LINK REL=STYLESHEET TYPE="text/css" HREF="../../../mobile/allman.css">
<!-- Editor's Notes: 9/22/1999 Ron Daring -->
</HEAD>
<BODY bgcolor="#FFFFFF">
<h1>Function</h1>

<hr>
<a name="mgiControlInit">
</A><h1><a name="mgiControlInit">mgiControlInit</A></h1><a name="mgiControlInit">
</A><p><a name="mgiControlInit"><i>Initializes MgiControl.</i></A></p><a name="mgiControlInit">
</A><H2><a name="mgiControlInit">Syntax</A></H2><a name="mgiControlInit">
</A><blockquote><a name="mgiControlInit">
    </A><pre><a name="mgiControlInit">#include &lt;mgi/Control.h&gt;
void mgiControlInit( MgiControl *control_ptr )
</A></PRE></blockquote><a name="mgiControlInit">
</A><H2><a name="mgiControlInit">Description</A></H2><a name="mgiControlInit">
  Initializes MgiControl.

</A><H2><a name="mgiControlInit">See Also</A></H2><a name="mgiControlInit">
</A><a href="mgictrl.htm#MgiControl">MgiControl</a><a name="mgiControlInit">

</A><hr>
<a name="mgiControlBind">
</A><h1><a name="mgiControlBind">mgiControlBind</A></h1><a name="mgiControlBind">
</A><p><a name="mgiControlBind"><i>Links MgiControl to a node.</i></A></p><a name="mgiControlBind">
</A><H2><a name="mgiControlBind">Syntax</A></H2><a name="mgiControlBind">
</A><blockquote><a name="mgiControlBind">
    </A><pre><a name="mgiControlBind">#include &lt;mgi/Control.h&gt;
void mgiControlBind( MgiControl *control_ptr,
                     MgiCharacter *char_ptr )
</A></PRE></blockquote><a name="mgiControlBind">
</A><H2><a name="mgiControlBind">Description</A></H2><a name="mgiControlBind">
  Links MgiControl to a node.
</A><H2><a name="mgiControlBind">See Also</A></H2><a name="mgiControlBind">
</A><a href="mgictrl.htm#MgiControl">MgiControl</a><a name="mgiControlBind">
</A><a href="mgichr.htm#MgiCharacter">MgiCharacter</a><a name="mgiControlBind">

</A><hr>
<a name="mgiControlGetULong">
</A><h1><a name="mgiControlGetULong">mgiControlGetULong</A></h1><a name="mgiControlGetULong">
</A><p><a name="mgiControlGetULong"><i>Gets unsigned integer value from field of node.</i></A></p><a name="mgiControlGetULong">
</A><H2><a name="mgiControlGetULong">Syntax</A></H2><a name="mgiControlGetULong">
</A><blockquote><a name="mgiControlGetULong">
    </A><pre><a name="mgiControlGetULong">#include &lt;mgi/Control.h&gt;
u32 mgiControlGetULong( const MgiControl *control_ptr )
</A></PRE></blockquote><a name="mgiControlGetULong">
</A><H2><a name="mgiControlGetULong">Description</A></H2><a name="mgiControlGetULong">
  Gets unsigned integer value from field of node.

</A><hr>
<a name="mgiControlGetSLong">
</A><h1><a name="mgiControlGetSLong">mgiControlGetSLong</A></h1><a name="mgiControlGetSLong">
</A><p><a name="mgiControlGetSLong"><i>Gets signed integer value from field of node.</i></A></p><a name="mgiControlGetSLong">
</A><H2><a name="mgiControlGetSLong">Syntax</A></H2><a name="mgiControlGetSLong">
</A><blockquote><a name="mgiControlGetSLong">
    </A><pre><a name="mgiControlGetSLong">#include &lt;mgi/Control.h&gt;
s32 mgiControlGetSLong( const MgiControl *control_ptr )
</A></PRE></blockquote><a name="mgiControlGetSLong">
</A><H2><a name="mgiControlGetSLong">Description</A></H2><a name="mgiControlGetSLong">
  Gets signed integer value from field of node.

</A><hr>
<a name="mgiControlGetFloat">
</A><h1><a name="mgiControlGetFloat">mgiControlGetFloat</A></h1><a name="mgiControlGetFloat">
</A><p><a name="mgiControlGetFloat"><i>Gets floating point value from field of node.</i></A></p><a name="mgiControlGetFloat">
</A><H2><a name="mgiControlGetFloat">Syntax</A></H2><a name="mgiControlGetFloat">
</A><blockquote><a name="mgiControlGetFloat">
    </A><pre><a name="mgiControlGetFloat">#include &lt;mgi/Control.h&gt;
float mgiControlGetFloat( const MgiControl *control_ptr )
</A></PRE></blockquote><a name="mgiControlGetFloat">
</A><H2><a name="mgiControlGetFloat">Description</A></H2><a name="mgiControlGetFloat">
  Gets floating point value from field of node.

</A><hr>
<a name="mgiControlGetULongs">
</A><h1><a name="mgiControlGetULongs">mgiControlGetULongs</A></h1><a name="mgiControlGetULongs">
</A><p><a name="mgiControlGetULongs"><i>Gets array of unsigned integer values from field of node and puts it into array.</i></A></p><a name="mgiControlGetULongs">
</A><H2><a name="mgiControlGetULongs">Syntax</A></H2><a name="mgiControlGetULongs">
</A><blockquote><a name="mgiControlGetULongs">
    </A><pre><a name="mgiControlGetULongs">#include &lt;mgi/Control.h&gt;
void mgiControlGetULongs( const MgiControl *control_ptr, u32 *array )
</A></PRE></blockquote><a name="mgiControlGetULongs">
</A><H2><a name="mgiControlGetULongs">Description</A></H2><a name="mgiControlGetULongs">
  Gets array of unsigned integer values from field of node and puts it into array.

</A><hr>
<a name="mgiControlGetSLongs">
</A><h1><a name="mgiControlGetSLongs">mgiControlGetSLongs</A></h1><a name="mgiControlGetSLongs">
</A><p><a name="mgiControlGetSLongs"><i>Gets array of signed integer values from field of node and puts it into array.</i></A></p><a name="mgiControlGetSLongs">
</A><H2><a name="mgiControlGetSLongs">Syntax</A></H2><a name="mgiControlGetSLongs">
</A><blockquote><a name="mgiControlGetSLongs">
    </A><pre><a name="mgiControlGetSLongs">#include &lt;mgi/Control.h&gt;
void mgiControlGetSLongs( const MgiControl *control_ptr, s32 *array )
</A></PRE></blockquote><a name="mgiControlGetSLongs">
</A><H2><a name="mgiControlGetSLongs">Description</A></H2><a name="mgiControlGetSLongs">
  Gets array of signed integer values from field of node and puts it into array.

</A><hr>
<a name="mgiControlGetFloats">
</A><h1><a name="mgiControlGetFloats">mgiControlGetFloats</A></h1><a name="mgiControlGetFloats">
</A><p><a name="mgiControlGetFloats"><i>Gets array of floating point values from field of node and puts it into array.</i></A></p><a name="mgiControlGetFloats">
</A><H2><a name="mgiControlGetFloats">Syntax</A></H2><a name="mgiControlGetFloats">
</A><blockquote><a name="mgiControlGetFloats">
    </A><pre><a name="mgiControlGetFloats">#include &lt;mgi/Control.h&gt;
void mgiControlGetFloats( const MgiControl *control_ptr, float *array )
</A></PRE></blockquote><a name="mgiControlGetFloats">
</A><H2><a name="mgiControlGetFloats">Description</A></H2><a name="mgiControlGetFloats">
  Gets array of floating point values from field of node and puts it into array.

</A><hr>
<a name="mgiControlSetULong">
</A><h1><a name="mgiControlSetULong">mgiControlSetULong</A></h1><a name="mgiControlSetULong">
</A><p><a name="mgiControlSetULong"><i>Sets unsigned integer value to field of node.</i></A></p><a name="mgiControlSetULong">
</A><H2><a name="mgiControlSetULong">Syntax</A></H2><a name="mgiControlSetULong">
</A><blockquote><a name="mgiControlSetULong">
    </A><pre><a name="mgiControlSetULong">#include &lt;mgi/Control.h&gt;
void mgiControlSetULong( MgiControl *control_ptr, const u32 value )
</A></PRE></blockquote><a name="mgiControlSetULong">
</A><H2><a name="mgiControlSetULong">Description</A></H2><a name="mgiControlSetULong">
  Sets unsigned integer value to field of node.

</A><hr>
<a name="mgiControlSetSLong">
</A><h1><a name="mgiControlSetSLong">mgiControlSetSLong</A></h1><a name="mgiControlSetSLong">
</A><p><a name="mgiControlSetSLong"><i>Sets signed integer value to field of node.</i></A></p><a name="mgiControlSetSLong">
</A><H2><a name="mgiControlSetSLong">Syntax</A></H2><a name="mgiControlSetSLong">
</A><blockquote><a name="mgiControlSetSLong">
    </A><pre><a name="mgiControlSetSLong">#include &lt;mgi/Control.h&gt;
void mgiControlSetSLong( MgiControl *control_ptr, const s32 value )
</A></PRE></blockquote><a name="mgiControlSetSLong">
</A><H2><a name="mgiControlSetSLong">Description</A></H2><a name="mgiControlSetSLong">
  Sets signed integer value to field of node.

</A><hr>
<a name="mgiControlSetFloat">
</A><h1><a name="mgiControlSetFloat">mgiControlSetFloat</A></h1><a name="mgiControlSetFloat">
</A><p><a name="mgiControlSetFloat"><i>Sets floating point value to field of node. </i></A></p><a name="mgiControlSetFloat">
</A><H2><a name="mgiControlSetFloat">Syntax</A></H2><a name="mgiControlSetFloat">
</A><blockquote><a name="mgiControlSetFloat">
    </A><pre><a name="mgiControlSetFloat">#include &lt;mgi/Control.h&gt;
void mgiControlSetFloat( MgiControl *control_ptr, const float value )
</A></PRE></blockquote><a name="mgiControlSetFloat">
</A><H2><a name="mgiControlSetFloat">Description</A></H2><a name="mgiControlSetFloat">
  Sets floating point value to field of node. 

</A><hr>
<a name="mgiControlSetULongs">
</A><h1><a name="mgiControlSetULongs">mgiControlSetULongs</A></h1><a name="mgiControlSetULongs">
</A><p><a name="mgiControlSetULongs"><i>Sets array of unsigned integer values to field of node. </i></A></p><a name="mgiControlSetULongs">
</A><H2><a name="mgiControlSetULongs">Syntax</A></H2><a name="mgiControlSetULongs">
</A><blockquote><a name="mgiControlSetULongs">
    </A><pre><a name="mgiControlSetULongs">#include &lt;mgi/Control.h&gt;
void mgiControlSetULongs( MgiControl *control_ptr, const u32 *array )
</A></PRE></blockquote><a name="mgiControlSetULongs">
</A><H2><a name="mgiControlSetULongs">Description</A></H2><a name="mgiControlSetULongs">
  Sets array of unsigned integer values to field of node. 

</A><hr>
<a name="mgiControlSetSLongs">
</A><h1><a name="mgiControlSetSLongs">mgiControlSetSLongs</A></h1><a name="mgiControlSetSLongs">
</A><p><a name="mgiControlSetSLongs"><i>Sets array of signed integer values to field of node.</i></A></p><a name="mgiControlSetSLongs">
</A><H2><a name="mgiControlSetSLongs">Syntax</A></H2><a name="mgiControlSetSLongs">
</A><blockquote><a name="mgiControlSetSLongs">
    </A><pre><a name="mgiControlSetSLongs">#include &lt;mgi/Control.h&gt;
void mgiControlSetSLongs( MgiControl *control_ptr, const s32 *array )
</A></PRE></blockquote><a name="mgiControlSetSLongs">
</A><H2><a name="mgiControlSetSLongs">Description</A></H2><a name="mgiControlSetSLongs">
  Sets array of signed integer values to field of node.

</A><hr>
<a name="mgiControlSetFloats">
</A><h1><a name="mgiControlSetFloats">mgiControlSetFloats</A></h1><a name="mgiControlSetFloats">
</A><p><a name="mgiControlSetFloats"><i>Sets array of floating point values to field of node.</i></A></p><a name="mgiControlSetFloats">
</A><H2><a name="mgiControlSetFloats">Syntax</A></H2><a name="mgiControlSetFloats">
</A><blockquote><a name="mgiControlSetFloats">
    </A><pre><a name="mgiControlSetFloats">#include &lt;mgi/Control.h&gt;
void mgiControlSetFloats( MgiControl *control_ptr, const float *array )
</A></PRE></blockquote><a name="mgiControlSetFloats">
</A><H2><a name="mgiControlSetFloats">Description</A></H2><a name="mgiControlSetFloats">
  Sets array of floating point values to field of node.

</A><hr>
<h1><a name="mgiControlSetFloats">Macros</A></h1><hr>
<hr>
<a name="_mgiControlUnbind">
</A><h1><a name="_mgiControlUnbind">_mgiControlUnbind</A></h1><a name="_mgiControlUnbind">
</A><p><a name="_mgiControlUnbind"><i>Separates MgiControl from node.</i></A></p><a name="_mgiControlUnbind">
</A><H2><a name="_mgiControlUnbind">Syntax</A></H2><a name="_mgiControlUnbind">
</A><blockquote><a name="_mgiControlUnbind">
    </A><pre><a name="_mgiControlUnbind">#include &lt;mgi/Control.h&gt;
_mgiControlUnbind(control_ptr)
</A></PRE></blockquote><a name="_mgiControlUnbind">
</A><H2><a name="_mgiControlUnbind">Description</A></H2><a name="_mgiControlUnbind">
  Separates MgiControl from node.

</A><hr>
<h1><a name="_mgiControlUnbind">Structure</A></h1><hr>
<hr>
<a name="MgiControl">
</A><h1><a name="MgiControl">MgiControl</A></h1><blockquote><a name="MgiControl">
</A><pre><a name="MgiControl">
#include &lt;mgi/Control.h&gt;

typedef struct _MgiControl
{
    char                *node_name;
    struct _MhcNode     *node_ptr;
    u32                 field;
    u32                 size;
    union
    {
        void	*ptr;
        u32	*u32_ptr;
        s32	*s32_ptr;
        float	*float_ptr;
    }                   access;
} MgiControl;
</A></pre></blockquote><a name="MgiControl">
<br><br><br><br><br><br><br><br><br><br>
<br><br><br><br><br><br><br><br><br><br>
<br><br><br><br><br><br><br><br><br><br>
<br><br><br><br><br><br><br><br><br><br>
  </A></BODY>
</HTML>

